{"version":3,"sources":["webpack:///./src/pages/categories.tsx","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_object-to-array.js"],"names":["Categories","props","postsEdges","data","allMarkdownRemark","edges","histogram","reduce","hist","post","node","frontmatter","categories","category","Object","entries","sort","a","b","map","key","value","pageQuery","$export","$entries","S","it","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","keys","length","i","result","call","push"],"mappings":"sQA4DeA,UAtB+B,SAAAC,GAAS,IAE/CC,EADWD,EAATE,KACgBC,kBAAkBC,MACpCC,EAA4BJ,EA9BrBK,QAAO,SAACC,EAAMC,GACzB,IACA,EADuBA,EAAKC,KAAKC,YAAYC,WAC7C,wDAAuC,yFAA5BC,EAA4B,EAInCL,EAAKK,GAHDA,KAAYL,EAGCA,EAAKK,GAAY,EAFjB,EAKrB,OAAOL,IACN,IAsBH,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACGM,OAAOC,QAAQT,GACbU,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAE,GAAKC,EAAE,IAAM,EAAI,KACnCC,KAAI,gBAAEC,EAAF,KAAOC,EAAP,YACH,yBAAKD,IAAKA,GACR,6BACGA,EADH,MACWC,UAWlB,IAAMC,EAAY,c,uBC7DzB,IAAIC,EAAU,EAAQ,QAClBC,EAAW,EAAQ,OAAR,EAA8B,GAE7CD,EAAQA,EAAQE,EAAG,SAAU,CAC3BV,QAAS,SAAiBW,GACxB,OAAOF,EAASE,O,qBCNpB,IAAIC,EAAc,EAAQ,QACtBC,EAAU,EAAQ,QAClBC,EAAY,EAAQ,QACpBC,EAAS,EAAQ,QAAiBC,EACtCC,EAAOC,QAAU,SAAUC,GACzB,OAAO,SAAUR,GAOf,IANA,IAKIN,EALAe,EAAIN,EAAUH,GACdU,EAAOR,EAAQO,GACfE,EAASD,EAAKC,OACdC,EAAI,EACJC,EAAS,GAENF,EAASC,GACdlB,EAAMgB,EAAKE,KACNX,IAAeG,EAAOU,KAAKL,EAAGf,IACjCmB,EAAOE,KAAKP,EAAY,CAACd,EAAKe,EAAEf,IAAQe,EAAEf,IAG9C,OAAOmB","file":"component---src-pages-categories-tsx-09455161447f162a77ca.js","sourcesContent":["// eslint-disable\n\nimport React from \"react\";\nimport PT from \"prop-types\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport { CardBox } from \"../components/cardbox\";\n\nconst createHistogram = (\n  posts: CategoriesProps[\"data\"][\"allMarkdownRemark\"][\"edges\"]\n) => {\n  return posts.reduce((hist, post) => {\n    const postCategories = post.node.frontmatter.categories;\n    for (const category of postCategories) {\n      if (!(category in hist)) {\n        hist[category] = 1;\n      } else {\n        hist[category] = hist[category] + 1;\n      }\n    }\n    return hist;\n  }, {});\n};\n\ninterface CategoriesProps {\n  data: {\n    allMarkdownRemark: {\n      edges: Array<{\n        node: {\n          frontmatter: {\n            categories: string[] | null;\n          };\n        };\n      }>;\n    };\n  };\n}\n\nconst Categories: React.FC<CategoriesProps> = props => {\n  const { data } = props;\n  const postsEdges = data.allMarkdownRemark.edges;\n  const histogram = createHistogram(postsEdges);\n\n  return (\n    <Layout>\n      <CardBox>\n        {Object.entries(histogram)\n          .sort((a, b) => (a[1] > b[1] ? -1 : 1))\n          .map(([key, value]) => (\n            <div key={key}>\n              <div>\n                {key} = {value}\n              </div>\n            </div>\n          ))}\n      </CardBox>\n    </Layout>\n  );\n};\n\nexport default Categories;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            categories\n          }\n        }\n      }\n    }\n  }\n`;\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}