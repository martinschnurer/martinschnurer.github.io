{"version":3,"sources":["webpack:///./src/pages/calculators/inflation/index.jsx"],"names":["InflationCalculator","changeInputValue","e","setState","inputValue","target","value","changeInflationRate","inflationRate","changeFutureYear","futureYear","format","val","Math","round","computeFutureValue","state","yearNow","Date","getFullYear","percentualDecrease","howMuchYouShouldHave","percentualIncrease","getErrorMessage","render","this","errorMessage","title","description","keywords","className","rel","href","styles","input_panel","input_div","onChange","placeholder","resultPanel","style","marginBottom","React","PureComponent"],"mappings":"mOAOMA,E,uXACJ,aAAe,IAAD,SACZ,sBAQFC,iBAAmB,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEC,WAAYF,EAAEG,OAAOC,SAT/C,EAWdC,oBAAsB,SAAAL,GAAC,OAAI,EAAKC,SAAS,CAAEK,cAAeN,EAAEG,OAAOC,SAXrD,EAadG,iBAAmB,SAAAP,GAAC,OAAI,EAAKC,SAAS,CAAEO,WAAYR,EAAEG,OAAOC,SAb/C,EAedK,OAAS,SAAAC,GAAG,OAAIC,KAAKC,MAAY,IAANF,GAAa,KAf1B,EAiBdG,mBAAqB,WAAO,IAAD,EACyB,EAAKC,MAA/CZ,EADiB,EACjBA,WAAYI,EADK,EACLA,cAAeE,EADV,EACUA,WAC7BO,GAAU,IAAIC,MAAOC,cACrBC,EAAqB,EAAIZ,EAAgB,IAE/C,OAAO,EAAKG,OACVP,EAAU,SAAGgB,EAAuBV,EAAaO,KAvBvC,EA2BdI,qBAAuB,WAAO,IAAD,EACuB,EAAKL,MAA/CZ,EADmB,EACnBA,WAAYI,EADO,EACPA,cAAeE,EADR,EACQA,WAC7BO,GAAU,IAAIC,MAAOC,cACrBG,EAAqB,EAAId,EAAgB,IAE/C,OAAO,EAAKG,OACVP,EAAU,SAAGkB,EAAuBZ,EAAaO,KAjCvC,EAqCdM,gBAAkB,WAAO,IAAD,EAC4B,EAAKP,MAA/CZ,EADc,EACdA,WAAYI,EADE,EACFA,cAAeE,EADb,EACaA,WAC7BO,GAAU,IAAIC,MAAOC,cAC3B,OAAIT,GAAcO,EACV,sCAAuCA,EAA7C,IAEGb,EAGiB,KAAlBI,EACK,4DAELA,EAAgB,EACX,sCAEF,KARE,uBA1CT,EAAKQ,MAAQ,CACXZ,WAAY,IACZI,cAAe,EACfE,YAAY,IAAIQ,MAAOC,cAAgB,GAL7B,E,mBAuDdK,OAAA,WAAU,IAAD,EAC2CC,KAAKT,MAA/CZ,EADD,EACCA,WAAYI,EADb,EACaA,cAAeE,EAD5B,EAC4BA,WAC7BO,GAAU,IAAIC,MAAOC,cACrBO,EAAeD,KAAKF,kBAC1B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEI,MAAM,6BACNC,YAAY,4EACZC,SAAU,CAAC,YAAa,QAAS,aAAc,eAEjD,kBAAC,IAAD,KACE,6BACE,yBAAKC,UAAU,sBAAf,iIAE8D,IAC5D,uBACEC,IAAI,sBACJ1B,OAAO,SACP2B,KAAK,8EAHP,SAQF,yBAAKF,UAAWG,IAAOC,aACrB,yBAAKJ,UAAWG,IAAOE,WACrB,0CAAmBlB,EAAnB,KACA,6BACE,kBAAC,IAAD,CAAOX,MAAOF,EAAYgC,SAAUX,KAAKxB,qBAI7C,yBAAK6B,UAAWG,IAAOE,WACrB,gDACA,6BACE,kBAAC,IAAD,CACE7B,MAAOE,EACP4B,SAAUX,KAAKlB,sBAHnB,MASF,yBAAKuB,UAAWG,IAAOE,WACrB,6CACA,6BACE,kBAAC,IAAD,CACE7B,MAAOI,EACP0B,SAAUX,KAAKhB,iBACf4B,YAAY,YAKpB,yBAAKP,UAAWG,IAAOK,aACpBZ,EACC,yBAAKI,UAAU,SAASJ,GAExB,6BACE,yBAAKa,MAAO,CAAEC,aAAc,KAA5B,SACYpC,EADZ,kBAEE,+BAAKqB,KAAKV,sBAFZ,OAGUL,GAEV,gDACkB,+BAAKe,KAAKJ,wBAD5B,iBAEUjB,EAFV,sB,GAxHgBqC,IAAMC,eAsIzB1C","file":"component---src-pages-calculators-inflation-index-jsx-18e868730122e9a41369.js","sourcesContent":["import React from \"react\";\nimport Layout from \"../../../components/layout\";\nimport SEO from \"../../../components/seo\";\nimport styles from \"./index.module.scss\";\nimport { CardBox } from \"../../../components/cardbox\";\nimport Input from \"../../../components/Input\";\n\nclass InflationCalculator extends React.PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      inputValue: 1000,\n      inflationRate: 3,\n      futureYear: new Date().getFullYear() + 5\n    };\n  }\n\n  changeInputValue = e => this.setState({ inputValue: e.target.value });\n\n  changeInflationRate = e => this.setState({ inflationRate: e.target.value });\n\n  changeFutureYear = e => this.setState({ futureYear: e.target.value });\n\n  format = val => Math.round(val * 100) / 100;\n\n  computeFutureValue = () => {\n    const { inputValue, inflationRate, futureYear } = this.state;\n    const yearNow = new Date().getFullYear();\n    const percentualDecrease = 1 - inflationRate / 100;\n\n    return this.format(\n      inputValue * percentualDecrease ** (futureYear - yearNow)\n    );\n  };\n\n  howMuchYouShouldHave = () => {\n    const { inputValue, inflationRate, futureYear } = this.state;\n    const yearNow = new Date().getFullYear();\n    const percentualIncrease = 1 + inflationRate / 100;\n\n    return this.format(\n      inputValue * percentualIncrease ** (futureYear - yearNow)\n    );\n  };\n\n  getErrorMessage = () => {\n    const { inputValue, inflationRate, futureYear } = this.state;\n    const yearNow = new Date().getFullYear();\n    if (futureYear <= yearNow) {\n      return `Write down future year, (more than ${yearNow})`;\n    }\n    if (!inputValue) {\n      return \"Fill in input value\";\n    }\n    if (inflationRate === \"\") {\n      return \"Fill in inflation rate, for example 2% (Average is 1-2 %)\";\n    }\n    if (inflationRate < 0) {\n      return \"Inflation rate must be more than 0%\";\n    }\n    return null;\n  };\n\n  render() {\n    const { inputValue, inflationRate, futureYear } = this.state;\n    const yearNow = new Date().getFullYear();\n    const errorMessage = this.getErrorMessage();\n    return (\n      <Layout>\n        <SEO\n          title=\"Inflation money calculator\"\n          description=\"This calculator computes how much your money will be worth in the future.\"\n          keywords={[\"inflation\", \"money\", \"calculator\", \"investing\"]}\n        />\n        <CardBox>\n          <div>\n            <div className=\"topbottom_margined\">\n              Inflation is the yearly rate of decreasing monetary values. To see\n              average inflation rates over the years, take a look at this{\" \"}\n              <a\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n                href=\"https://www.usinflationcalculator.com/inflation/historical-inflation-rates\"\n              >\n                page\n              </a>\n            </div>\n            <div className={styles.input_panel}>\n              <div className={styles.input_div}>\n                <span>{`Value in ${yearNow}:`}</span>\n                <div>\n                  <Input value={inputValue} onChange={this.changeInputValue} />\n                </div>\n              </div>\n\n              <div className={styles.input_div}>\n                <span>Inflation Rate</span>\n                <div>\n                  <Input\n                    value={inflationRate}\n                    onChange={this.changeInflationRate}\n                  />\n                  %\n                </div>\n              </div>\n\n              <div className={styles.input_div}>\n                <span>Future year</span>\n                <div>\n                  <Input\n                    value={futureYear}\n                    onChange={this.changeFutureYear}\n                    placeholder=\"2020\"\n                  />\n                </div>\n              </div>\n            </div>\n            <div className={styles.resultPanel}>\n              {errorMessage ? (\n                <div className=\"error\">{errorMessage}</div>\n              ) : (\n                <div>\n                  <div style={{ marginBottom: 15 }}>\n                    {`Your €${inputValue} will be worth `}\n                    <b>€{this.computeFutureValue()}</b>\n                    {` in ${futureYear}`}\n                  </div>\n                  <div>\n                    You should have <b>€{this.howMuchYouShouldHave()}</b> to be\n                    worth €{inputValue} as of today\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n        </CardBox>\n      </Layout>\n    );\n  }\n}\n\nexport default InflationCalculator;\n"],"sourceRoot":""}