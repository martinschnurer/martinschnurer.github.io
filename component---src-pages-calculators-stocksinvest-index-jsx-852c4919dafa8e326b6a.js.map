{"version":3,"sources":["webpack:///./src/pages/calculators/stocksinvest/index.jsx","webpack:///./content/categories.js","webpack:///./src/components/MenuCategories.jsx","webpack:///./src/components/layout.jsx","webpack:///./src/components/cardbox.jsx","webpack:///./src/components/seo.js"],"names":["seo","title","description","roundValue","val","places","num","Math","pow","round","StocksInvestPage","_this","_React$Component","call","this","changeMonthlyInput","e","target","value","replace","commaRegex","setState","monthlyInput","changeAverageYield","averageYield","computeYear","arr","_this$state","state","av","lastYear","length","myNextInput","nextBalance","balance","nextMyTotalInput","myTotalInput","nextGrow","push","grow","computeYield","_this$state2","i","percentFrom","smallerValue","biggerValue","render","_this2","_this$state3","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","_components_cardbox__WEBPACK_IMPORTED_MODULE_5__","className","onChange","map","obj","React","Component","module","exports","categories","name","label","link","MenuDropdownCategories","_React$PureComponent","opened","hoveredOn","react_default","onMouseEnter","onMouseLeave","classnames","styles","menu_item","onClick","dropdown","cat","key","itemWrapper","item","gatsby_browser_entry","to","PureComponent","Layout","_this$props","props","children","htmlStyles","root_panel","grid_menu","menu","left_menu","activeClassName","active","MenuCategories","right_menu","propTypes","PT","node","isRequired","string","objectOf","oneOfType","number","defaultProps","CardBox","_this$props$style","style","body_content","Object","assign","inside_content","SEO","_ref","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","PropTypes","array","arrayOf"],"mappings":"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","file":"component---src-pages-calculators-stocksinvest-index-jsx-852c4919dafa8e326b6a.js","sourcesContent":["import React from 'react';\nimport Layout from '../../../components/layout';\nimport SEO from '../../../components/seo';\nimport Box from '../../../components/cardbox';\n\nconst seo = {\n  title: 'Compounding over time',\n  description: '',\n};\n\nconst roundValue = (val, places = 2) => {\n  const num = 10 ** places;\n  return Math.round(val * num) / num;\n};\n\nclass StocksInvestPage extends React.Component {\n  constructor() {\n    super();\n    this.commaRegex = /,/g;\n    this.state = {\n      monthlyInput: 100,\n      averageYield: 5.00,\n    };\n  }\n\n  changeMonthlyInput = (e) => {\n    let val = e.target.value;\n    val = val.replace(this.commaRegex, '.');\n    this.setState({ monthlyInput: val });\n  }\n\n  changeAverageYield = (e) => {\n    let val = e.target.value;\n    val = val.replace(this.commaRegex, '.');\n    this.setState({ averageYield: val });\n  }\n\n  computeYear = (arr) => {\n    const { averageYield, monthlyInput } = this.state;\n    const av = (+averageYield + 100) / 100;\n    const lastYear = arr[arr.length - 1];\n    const myNextInput = monthlyInput * 12;\n    const nextBalance = (lastYear.balance + myNextInput) * av;\n    const nextMyTotalInput = lastYear.myTotalInput + myNextInput;\n    const nextGrow = nextBalance - nextMyTotalInput;\n    arr.push({\n      balance: roundValue(nextBalance),\n      myTotalInput: roundValue(nextMyTotalInput),\n      grow: roundValue(nextGrow),\n    });\n    return arr;\n  }\n\n  computeYield = () => {\n    const { averageYield, monthlyInput } = this.state;\n    const av = (+averageYield + 100) / 100;\n    let arr = [{\n      balance: roundValue(monthlyInput * 12 * av),\n      myTotalInput: roundValue(monthlyInput * 12),\n      grow: roundValue(monthlyInput * 12 * av - monthlyInput * 12),\n    }];\n\n    for (let i = 1; i < 30; i += 1) {\n      arr = this.computeYear(arr);\n    }\n\n    return arr;\n  }\n\n  percentFrom = (smallerValue, biggerValue) => roundValue(smallerValue * 100 / biggerValue);\n\n  render() {\n    const { averageYield, monthlyInput } = this.state;\n\n    return (\n      <Layout>\n        <SEO\n          {...seo}\n        />\n        <Box>\n          <div className=\"topbottom_margined\">\n            Average yield in %\n            <input className=\"margin-left\" onChange={this.changeAverageYield} value={averageYield} />\n          </div>\n          <div>\n            Monthly contribution\n            {' '}\n            <input className=\"margin-left\" onChange={this.changeMonthlyInput} value={monthlyInput} />\n          </div>\n          <table>\n            <thead>\n              <tr>\n                <th>Year</th>\n                <th>Value</th>\n                <th>My total contribution</th>\n                <th>Total Grow</th>\n              </tr>\n            </thead>\n            {this.computeYield().map((obj, i) => (\n              <tr>\n                <td>\n                  {i}\n                  {' '}\n                  Year\n                </td>\n                <td>\n                  {obj.balance}\n                  {' '}\n                  €\n                </td>\n                <td>\n                  {obj.myTotalInput}\n                  {' '}\n                  €\n                  {' '}\n                  <em>\n                    (\n                    {this.percentFrom(obj.myTotalInput, obj.balance)}\n                    {' '}\n                    %)\n                  </em>\n                </td>\n                <td>\n                  {obj.grow}\n                  {' '}\n                  €\n                  {' '}\n                  <em>\n                    (\n                    {this.percentFrom(obj.grow, obj.balance)}\n                    {' '}\n                    %)\n                  </em>\n                </td>\n              </tr>\n            ))}\n          </table>\n        </Box>\n      </Layout>\n    );\n  }\n}\n\nexport default StocksInvestPage;\n","module.exports = {\n  \"categories\": [\n    {\n      \"name\": \"personal\",\n      \"label\": \"Personal\",\n      \"link\": \"/category/personal\",\n    },\n    {\n      \"name\": \"finance\",\n      \"label\": \"Finance\",\n      \"link\": \"/category/finance\",\n    },\n    {\n      \"name\": \"programming\",\n      \"label\": \"Programming\",\n      \"link\": \"/category/programming\",\n    }\n  ]\n}\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { Link } from \"gatsby\";\nimport categories from \"../../content/categories\";\nimport styles from \"./MenuCategories.module.scss\";\n\nconst SubCategory = ({ link, children }) => (\n  <div className={styles.item}>\n    <Link to={link}>{children}</Link>\n  </div>\n);\n\nclass MenuDropdownCategories extends React.PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      opened: false,\n      hoveredOn: null,\n    }\n  }\n\n  render() {\n    \n    return (\n      <div\n        onMouseEnter={() => this.setState({ opened: true })}\n        onMouseLeave={() => this.setState({ opened: false })}\n        className={classnames(styles.menu_item, styles.categories)}\n      >\n        <span onClick={state => this.setState({ opened: !state.opened })}>\n          Categories\n        </span>\n        {\n          this.state.opened && (\n            <div className={styles.dropdown}>\n              {categories.categories.map(cat => {\n                \n                \n                return (\n                  <div key={cat.name} className={styles.itemWrapper}>\n                    <div\n                      onMouseEnter={() => this.setState({ hoveredOn: cat.name })} \n                      className={styles.item}\n                    >\n                      <Link to={cat.link} className={styles.label}>{cat.label}</Link>\n                    </div>\n                  </div>\n                )\n              })}\n            </div>\n          )\n        } \n      </div>\n    );\n  }\n}\n\nexport default MenuDropdownCategories;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PT from 'prop-types';\nimport { Link } from 'gatsby';\nimport styles from './layout.module.scss';\nimport MenuCategories from \"./MenuCategories\";\n\nclass Layout extends React.PureComponent {\n  render() {\n    const {\n      children,\n      className,\n      styles: htmlStyles,\n    } = this.props;\n\n    return (\n      <div className={classnames(styles.root_panel, className)} styles={htmlStyles}>\n        <div className={styles.grid_menu}>\n          <div className={classnames(styles.menu, styles.left_menu)}>\n            <div className={styles.menu_item}>\n              <Link to=\"/\" activeClassName={styles.active}>\n                Blog\n              </Link>\n            </div>\n            <div className={styles.menu_item}>\n              <Link to=\"/calculators\" activeClassName={styles.active}>\n                Tools\n              </Link>\n            </div>\n            <MenuCategories />\n          </div>\n          <div className={classnames(styles.menu, styles.right_menu)}>\n            <div className={styles.menu_item}>\n              <Link to=\"/portfolio\" activeClassName={styles.active}>\n                Portfolio\n              </Link>\n            </div>\n            <div className={styles.menu_item}>\n              <Link to=\"/cv\" activeClassName={styles.active}>\n                CV\n              </Link>\n            </div>\n          </div>\n        </div>\n        {children}\n      </div>\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PT.node.isRequired,\n  className: PT.string,\n  styles: PT.objectOf(PT.oneOfType([PT.number, PT.string])),\n};\n\nLayout.defaultProps = {\n  className: '',\n  styles: {},\n};\n\nexport default Layout;\n","import React from 'react';\nimport PT from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './cardbox.module.scss';\n\nclass CardBox extends React.PureComponent {\n  render() {\n    const { children, className, style = {} } = this.props;\n\n    return (\n      <div\n        className={classnames(styles.body_content, className)}\n        style={{ ...style }}\n      >\n        <div className={styles.inside_content}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nCardBox.propTypes = {\n  children: PT.node.isRequired,\n  className: PT.string,\n  style: PT.objectOf(PT.oneOfType([PT.string, PT.number])),\n};\n\nCardBox.defaultProps = {\n  style: {},\n  className: '',\n};\n\nexport default CardBox;\nexport { CardBox };\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | Blog`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}