{"version":3,"sources":["webpack:///./src/pages/calculators/stocksinvest/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./static/crab-cancer-symbol.png","webpack:///./src/components/seo.js"],"names":["seo","title","description","roundValue","val","places","num","Math","pow","round","StocksInvestPage","_this","_React$Component","call","this","changeMonthlyInput","e","target","value","replace","commaRegex","setState","monthlyInput","changeAverageYield","averageYield","computeYear","arr","year","av","state","lastYear","length","myNextInput","nextBalance","balance","nextMyTotalInput","myTotalInput","nextGrow","push","grow","computeYield","i","percentFrom","smallerValue","biggerValue","render","_this2","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","className","onChange","map","obj","React","Component","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","props","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","_this$props","_this$props$withFoote","withFooter","react__WEBPACK_IMPORTED_MODULE_1___default","classnames","styles","root_panel","grid_menu","menu","menu_item","src","img","alt","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","body_content","inside_content","Date","getFullYear","p","SEO","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf"],"mappings":"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","file":"component---src-pages-calculators-stocksinvest-index-js-f493964e50516730db29.js","sourcesContent":["import React from \"react\";\nimport Layout from '../../../components/layout'\nimport SEO from \"../../../components/seo\"\n\nconst seo = {\n   title: \"Compounding over time\",\n   description: \"\",\n}\n\nconst roundValue = (val, places = 2) => {\n   const num = Math.pow(10, places);\n   return Math.round(val * num) / num;\n}\n\nclass StocksInvestPage extends React.Component {\n   \n   constructor() {\n      super();\n      this.commaRegex = /,/g\n      this.state = {\n         monthlyInput: 100,\n         averageYield: 5.00,\n      }\n   }\n\n   changeMonthlyInput = (e) => {\n      let val = e.target.value;\n      val = val.replace(this.commaRegex, '.')\n      this.setState({ monthlyInput: val })\n   }\n   changeAverageYield = (e) => {\n      let val = e.target.value;\n      val = val.replace(this.commaRegex, '.')\n      this.setState({ averageYield: val })\n   }\n\n   computeYear = (arr, year) => {\n      const av = (+this.state.averageYield + 100) / 100\n      const lastYear = arr[arr.length - 1];\n      const myNextInput = this.state.monthlyInput * 12;\n      const nextBalance = (lastYear.balance + myNextInput) * av;\n      const nextMyTotalInput = lastYear.myTotalInput + myNextInput;\n      const nextGrow = nextBalance - nextMyTotalInput;\n      arr.push({\n         balance: roundValue(nextBalance),\n         myTotalInput: roundValue(nextMyTotalInput),\n         grow: roundValue(nextGrow),\n      })\n      return arr;\n   }\n\n   computeYield = () => {\n      const av = (+this.state.averageYield+100) / 100;\n      let arr = [{\n         balance: roundValue(this.state.monthlyInput * 12 * av),\n         myTotalInput: roundValue(this.state.monthlyInput * 12),\n         grow: roundValue(this.state.monthlyInput * 12 * av - this.state.monthlyInput * 12),\n      }];\n\n      for (let i = 1; i < 30; i++) {\n         arr = this.computeYear(arr);\n      }\n      \n      return arr;\n   }\n\n   percentFrom(smallerValue, biggerValue) {\n      return roundValue(smallerValue * 100 / biggerValue)\n   }\n\n   render() {\n      return (\n         <Layout>\n            <SEO \n               {...seo}\n            />\n            <div className=\"topbottom_margined\">Average yield in %<input className=\"margin-left\" onChange={this.changeAverageYield} value={this.state.averageYield} /></div>\n            <div>Monthly contribution <input className=\"margin-left\" onChange={this.changeMonthlyInput} value={this.state.monthlyInput} /></div>\n            <table>\n               <thead>\n                  <tr>\n                     <th>Year</th>\n                     <th>Value</th>\n                     <th>My total contribution</th>\n                     <th>Total Grow</th>\n                  </tr>\n               </thead>\n               {this.computeYield().map((obj, i) => (\n                  <tr>\n                     <td>{i} Year</td>\n                     <td>{obj.balance} €</td>\n                     <td>{obj.myTotalInput} € <em>({this.percentFrom(obj.myTotalInput, obj.balance)} %)</em></td>\n                     <td>{obj.grow} € <em>({this.percentFrom(obj.grow, obj.balance)} %)</em></td>\n                  </tr>\n               ))}\n            </table>\n         </Layout>\n      )\n   }\n}\n\nexport default StocksInvestPage;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport classnames from 'classnames'\n\nimport styles from './layout.module.scss'\nimport img from \"../../static/crab-cancer-symbol.png\"\n\nclass Layout extends React.Component {\n\n  render() {\n    const { children, withFooter = true } = this.props;\n\n    return (\n      <div className={classnames(styles.root_panel)}>\n        <div className={styles.grid_menu}>\n          <div className={styles.menu}>\n            <img className={styles.menu_item} src={img} alt={\"menu logo\"} />\n            <div className={styles.menu_item}><Link to={\"/\"}>Home</Link></div>\n            <div className={styles.menu_item}><Link to={\"/calculators\"}>Calculators</Link></div>\n          </div>\n        </div>\n        <div className={styles.body_content}>\n          <div className={styles.inside_content}>\n            <div>\n              {children}\n            </div>\n            {withFooter && (\n              <footer>\n                © {new Date().getFullYear()}, Martin Schnurer\n              </footer>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/crab-cancer-symbol-df2517047b31779b6dc2798a803afcd4.png\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}