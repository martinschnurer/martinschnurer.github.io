{"version":3,"sources":["webpack:///./src/pages/calculators/inflation/index.jsx"],"names":["InflationCalculator","changeInputValue","e","setState","inputValue","target","value","changeInflationRate","inflationRate","changeFutureYear","futureYear","format","val","Math","round","computeFutureValue","state","yearNow","Date","getFullYear","percentualDecrease","getErrorMessage","render","this","errorMessage","title","description","keywords","className","rel","href","styles","input_panel","input_div","onChange","placeholder","React","PureComponent"],"mappings":"8KAOMA,E,oBACJ,aAAe,IAAD,SACZ,sBAQFC,iBAAmB,SAAAC,GAAC,OAAI,EAAKC,SAAS,CAAEC,WAAYF,EAAEG,OAAOC,SAT/C,EAWdC,oBAAsB,SAAAL,GAAC,OAAI,EAAKC,SAAS,CAAEK,cAAeN,EAAEG,OAAOC,SAXrD,EAadG,iBAAmB,SAAAP,GAAC,OAAI,EAAKC,SAAS,CAAEO,WAAYR,EAAEG,OAAOC,SAb/C,EAedK,OAAS,SAAAC,GAAG,OAAIC,KAAKC,MAAY,IAANF,GAAa,KAf1B,EAiBdG,mBAAqB,WAAO,IAAD,EACyB,EAAKC,MAA/CZ,EADiB,EACjBA,WAAYI,EADK,EACLA,cAAeE,EADV,EACUA,WAC7BO,GAAU,IAAIC,MAAOC,cACrBC,EAAqB,EAAKZ,EAAgB,IAEhD,OAAO,EAAKG,OAAOP,EAAU,SAAIgB,EAAuBV,EAAaO,KAtBzD,EAyBdI,gBAAkB,WAAO,IAAD,EAC4B,EAAKL,MAA/CZ,EADc,EACdA,WAAYI,EADE,EACFA,cAAeE,EADb,EACaA,WAC7BO,GAAU,IAAIC,MAAOC,cAC3B,OAAIT,GAAcO,EACV,sCAAuCA,EAA7C,IAEGb,EAGiB,KAAlBI,EACK,4DAELA,EAAgB,EACX,sCAEF,KARE,uBA9BT,EAAKQ,MAAQ,CACXZ,WAAY,IACZI,cAAe,EACfE,YAAY,IAAIQ,MAAOC,cAAgB,GAL7B,E,0GA2CdG,OAAA,WAAU,IAAD,EAC2CC,KAAKP,MAA/CZ,EADD,EACCA,WAAYI,EADb,EACaA,cAAeE,EAD5B,EAC4BA,WAC7BO,GAAU,IAAIC,MAAOC,cACrBK,EAAeD,KAAKF,kBAC1B,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEI,MAAM,6BACNC,YAAY,4EACZC,SAAU,CAAC,YAAa,QAAS,aAAc,eAEjD,kBAAC,IAAD,KACE,6BACE,yBAAKC,UAAU,sBAAf,iIAIG,IACD,uBAAGC,IAAI,sBAAsBxB,OAAO,SAASyB,KAAK,8EAAlD,SAEF,yBAAKF,UAAWG,IAAOC,aACrB,yBAAKJ,UAAWG,IAAOE,WACrB,0CAAmBhB,EAAnB,KACA,6BACE,kBAAC,IAAD,CAAOX,MAAOF,EAAY8B,SAAUX,KAAKtB,qBAI7C,yBAAK2B,UAAWG,IAAOE,WACrB,gDACA,6BACE,kBAAC,IAAD,CAAO3B,MAAOE,EAAe0B,SAAUX,KAAKhB,sBAD9C,MAMF,yBAAKqB,UAAWG,IAAOE,WACrB,6CACA,6BACE,kBAAC,IAAD,CAAO3B,MAAOI,EAAYwB,SAAUX,KAAKd,iBAAkB0B,YAAY,YAI5EX,EACC,yBAAKI,UAAU,SAASJ,GAExB,oCACWpB,EADX,mBAEE,2BACGmB,KAAKR,qBADR,KAFF,OAMUL,O,GAhGU0B,IAAMC,eA0GzBrC","file":"component---src-pages-calculators-inflation-index-jsx-757c718090d1b0b5c1e5.js","sourcesContent":["import React from 'react';\nimport Layout from '../../../components/layout';\nimport SEO from '../../../components/seo';\nimport styles from './index.module.css';\nimport { CardBox } from '../../../components/cardbox';\nimport Input from '../../../components/Input';\n\nclass InflationCalculator extends React.PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      inputValue: 1000,\n      inflationRate: 3,\n      futureYear: new Date().getFullYear() + 5,\n    };\n  }\n\n  changeInputValue = e => this.setState({ inputValue: e.target.value });\n\n  changeInflationRate = e => this.setState({ inflationRate: e.target.value });\n\n  changeFutureYear = e => this.setState({ futureYear: e.target.value });\n\n  format = val => Math.round(val * 100) / 100;\n\n  computeFutureValue = () => {\n    const { inputValue, inflationRate, futureYear } = this.state;\n    const yearNow = new Date().getFullYear();\n    const percentualDecrease = 1 - (inflationRate / 100);\n\n    return this.format(inputValue * (percentualDecrease ** (futureYear - yearNow)));\n  };\n\n  getErrorMessage = () => {\n    const { inputValue, inflationRate, futureYear } = this.state;\n    const yearNow = new Date().getFullYear();\n    if (futureYear <= yearNow) {\n      return `Write down future year, (more than ${yearNow})`;\n    }\n    if (!inputValue) {\n      return 'Fill in input value';\n    }\n    if (inflationRate === '') {\n      return 'Fill in inflation rate, for example 2% (Average is 1-2 %)';\n    }\n    if (inflationRate < 0) {\n      return 'Inflation rate must be more than 0%';\n    }\n    return null;\n  };\n\n  render() {\n    const { inputValue, inflationRate, futureYear } = this.state;\n    const yearNow = new Date().getFullYear();\n    const errorMessage = this.getErrorMessage();\n    return (\n      <Layout>\n        <SEO\n          title=\"Inflation money calculator\"\n          description=\"This calculator computes how much your money will be worth in the future.\"\n          keywords={['inflation', 'money', 'calculator', 'investing']}\n        />\n        <CardBox>\n          <div>\n            <div className=\"topbottom_margined\">\n              Inflation is the yearly rate of decreasing monetary values. To see\n              average inflation rates over the years, take a look at\n              this\n              {' '}\n              <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.usinflationcalculator.com/inflation/historical-inflation-rates\">page</a>\n            </div>\n            <div className={styles.input_panel}>\n              <div className={styles.input_div}>\n                <span>{`Value in ${yearNow}:`}</span>\n                <div>\n                  <Input value={inputValue} onChange={this.changeInputValue} />\n                </div>\n              </div>\n\n              <div className={styles.input_div}>\n                <span>Inflation Rate</span>\n                <div>\n                  <Input value={inflationRate} onChange={this.changeInflationRate} />\n                  %\n                </div>\n              </div>\n\n              <div className={styles.input_div}>\n                <span>Future year</span>\n                <div>\n                  <Input value={futureYear} onChange={this.changeFutureYear} placeholder=\"2020\" />\n                </div>\n              </div>\n            </div>\n            {errorMessage ? (\n              <div className=\"error\">{errorMessage}</div>\n            ) : (\n              <h2>\n                {`Your ${inputValue}€ will be worth `}\n                <b>\n                  {this.computeFutureValue()}\n                  €\n                </b>\n                {` in ${futureYear}`}\n              </h2>\n            )}\n          </div>\n        </CardBox>\n      </Layout>\n    );\n  }\n}\n\nexport default InflationCalculator;\n"],"sourceRoot":""}