{"version":3,"sources":["webpack:///./src/components/progressScreener/index.tsx","webpack:///./src/pages/calculators/progress-screener.tsx","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.object.values.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_object-to-array.js"],"names":["getItem","key","def","str","localStorage","JSON","parse","e","ProgressScreenerScene","useState","value","setValue","total","setTotal","dates","store","setStore","useEffect","testStore","updatedAt","Date","toISOString","datesItems","Object","values","sort","a","b","map","di","i","arr","previous","increment","reverse","className","name","onSubmit","preventDefault","d","localData","todayLabel","getFullYear","getMonth","getDate","valueNumber","parseInt","totalNumber","isNaN","setItem","stringify","placeholder","onChange","target","autoCorrect","spellCheck","toDateString","style","width","textShadow","Math","round","left","ProgressScreenerPage","$export","$values","S","it","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","keys","length","result","call","push"],"mappings":"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","file":"component---src-pages-calculators-progress-screener-tsx-f31242c50973e38f6361.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\n\ntype StoreItem = {\n  dates: {\n    [date: string]: {\n      updatedAt: string; // ISO\n      value: number;\n      total: number;\n    };\n  };\n};\n\nconst getItem = (key: string, def: any) => {\n  const str = localStorage.getItem(key);\n  if (str === null) {\n    return def;\n  }\n  try {\n    return JSON.parse(str);\n  } catch (e) {\n    return def;\n  }\n};\n\nconst getTodayLabel = () => {\n  const d = new Date();\n  return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\n};\n\nconst ProgressScreenerScene = () => {\n  const [value, setValue] = useState(\"\");\n  const [total, setTotal] = useState(\"\");\n  const [store, setStore] = useState<StoreItem>({ dates: {} });\n\n  useEffect(() => {\n    const store: StoreItem = getItem(\"store\", { dates: {} });\n\n    setStore(store);\n  }, []);\n\n  const addNewProgress = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const localData: StoreItem = getItem(\"store\", { dates: {} });\n    const todayLabel = getTodayLabel();\n\n    const valueNumber = parseInt(value);\n    const totalNumber = parseInt(total);\n\n    if (isNaN(valueNumber) || isNaN(totalNumber)) {\n      return;\n    }\n\n    localData.dates[todayLabel] = {\n      total: totalNumber,\n      value: valueNumber,\n      updatedAt: new Date().toISOString()\n    };\n\n    localStorage.setItem(\"store\", JSON.stringify(localData));\n    setStore(localData);\n  };\n\n  const testStore: StoreItem = {\n    ...store,\n    dates: {\n      ...store.dates,\n      \"2019-1-2\": {\n        total: 42000,\n        value: 1200,\n        updatedAt: new Date(2019, 1, 2).toISOString() as string\n      },\n      \"2019-1-1\": {\n        total: 42000,\n        value: 500,\n        updatedAt: new Date(2019, 1, 1).toISOString() as string\n      }\n    }\n  };\n\n  const datesItems: Array<\n    typeof testStore.dates[0] & { increment: number; previous: number }\n  > = Object.values(testStore.dates)\n    .sort((a, b) => (new Date(a.updatedAt) > new Date(b.updatedAt) ? 1 : -1))\n    .map((di, i, arr) => {\n      if (i === 0) {\n        return {\n          ...di,\n          previous: 0,\n          increment: di.value\n        };\n      }\n      return {\n        ...di,\n        previous: arr[i - 1].value,\n        increment: di.value - arr[i - 1].value\n      };\n    });\n\n  datesItems.reverse();\n\n  return (\n    <div>\n      <div className=\"p-5 px-10 border-b border-gray-200\">\n        <nav className=\"flex font-medium text-lg\">\n          {[\"Home\", \"Menu\", \"Pricing\", \"Support\"].map(name => (\n            <div\n              key={name}\n              className=\"mr-6 cursor-pointer text-gray-500 hover:text-gray-700\"\n            >\n              {name}\n            </div>\n          ))}\n        </nav>\n      </div>\n      {/* <div className=\" bg-indigo-600  text-gray-50 pb-24 p-10 flex\">\n        {[\"Lists\", \"Notificications\", \"Future messages\"].map(name => (\n          <div\n            key={name}\n            className=\"p-3 bg-opacity-25 bg-white mr-5 rounded-md cursor-pointer hover:bg-opacity-30 transition-all duration-500\"\n          >\n            {name}\n          </div>\n        ))}\n      </div> */}\n      <div className=\"p-4 sm:p-10 mb-40 /*-mt-24*/\">\n        <form\n          className=\"p-10 shadow-lg rounded-md border bg-white\"\n          onSubmit={addNewProgress}\n        >\n          <h1 className=\"text-3xl\">Add new progress</h1>\n          <div className=\"my-6 flex sm:block\">\n            <input\n              placeholder=\"5\"\n              className=\"text-center rounded-md border-gray-200 w-5/12 sm:w-auto\"\n              onChange={e => setValue(e.target.value)}\n            />\n            <div className=\"font-bold mx-4 w-2/12 sm:w-auto text-center inline-block\">\n              /\n            </div>\n            <input\n              placeholder=\"25\"\n              className=\"text-center rounded-md border-gray-200 w-5/12 sm:w-auto\"\n              onChange={e => setTotal(e.target.value)}\n            />\n          </div>\n          <div className=\"mb-6\">\n            <div className=\"text-lg mb-1 font-medium\">Comment</div>\n            <textarea\n              placeholder=\"I've made so much progress\"\n              autoCorrect=\"false\"\n              spellCheck={false}\n              className=\"w-full p-4 text-gray-600 rounded-md border-gray-200 resize-none shadow-none focus:shadow-lg transition-shadow focus:outline-none focus:border-opacity-25\"\n              onChange={e => setTotal(e.target.value)}\n            />\n          </div>\n          <button className=\"w-full sm:w-auto rounded-2xl bg-green-600 text-white sm:px-24 py-2 hover:bg-green-500 transition-colors duration-300\">\n            Add\n          </button>\n        </form>\n        {datesItems.map((di, i) => (\n          <>\n            <div className=\"text-xl text-gray-700 mt-8\">\n              {new Date(di.updatedAt).toDateString()}\n            </div>\n            <div className=\"rounded-md shadow border h-10 relative\">\n              <div\n                style={{\n                  width: `${(di.previous * 100) / di.total}%`\n                }}\n                className=\"absolute left-0 top-0 rounded-l-md bg-green-600 h-full flex justify-center items-center\"\n              />\n              <div\n                style={{ textShadow: \"0px 1px 3px #000000cc\" }}\n                className=\"z-50 absolute left-0 top-0 pl-5 flex items-center h-full text-gray-50\"\n              >\n                {di.value} / {di.total}\n                <span className=\"ml-4\">\n                  ({Math.round(((di.value * 100) / di.total) * 10) / 10}%)\n                </span>\n              </div>\n              <div\n                style={{\n                  width: `${(di.increment * 100) / di.total}%`,\n                  left: `${(di.previous * 100) / di.total}%`\n                }}\n                className={`absolute top-0 bg-green-400 h-full flex justify-center items-center text-gray-600 ${\n                  di.previous === 0 ? \"rounded-l-md\" : \"\"\n                }`}\n              />\n            </div>\n          </>\n        ))}\n      </div>\n      <div className=\"bg-indigo-800 text-gray-200 p-10\">\n        <div>\n          <div className=\"rounded-xl shadow border h-10 relative\">\n            <div\n              style={{\n                width: `25%`\n              }}\n              className=\"absolute left-0 top-0 rounded-l-xl bg-green-600 h-full flex justify-center items-center\"\n            />\n            <div\n              style={{ textShadow: \"0px 1px 3px #000000cc\" }}\n              className=\"z-50 absolute left-0 top-0 pl-5 flex items-center h-full text-gray-50\"\n            >\n              Footer\n            </div>\n          </div>\n        </div>\n        <div className=\"flex flex-col mt-8\">\n          {[\"Contact\", \"About\", \"Blog\", \"Cookies policy\"].map(name => (\n            <a className=\"text-gray-200 cursor-pointer mt-2\">{name}</a>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProgressScreenerScene;\n","import React from \"react\";\n\nimport ProgressScreenerScene from \"../../components/progressScreener\";\n\nconst ProgressScreenerPage = () => {\n  return <ProgressScreenerScene />;\n};\n\nexport default ProgressScreenerPage;\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}