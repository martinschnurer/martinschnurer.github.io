{"version":3,"sources":["webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@babel/runtime/helpers/esm/extends.js","webpack:///./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/react-transition-group/esm/TransitionGroupContext.js","webpack:///./node_modules/react-transition-group/esm/utils/ChildMapping.js","webpack:///./node_modules/react-transition-group/esm/TransitionGroup.js","webpack:///./node_modules/react-transition-group/node_modules/dom-helpers/esm/removeClass.js","webpack:///./node_modules/react-transition-group/esm/config.js","webpack:///./node_modules/react-transition-group/esm/Transition.js","webpack:///./node_modules/react-transition-group/esm/CSSTransition.js","webpack:///./node_modules/react-transition-group/node_modules/dom-helpers/esm/addClass.js","webpack:///./node_modules/react-transition-group/node_modules/dom-helpers/esm/hasClass.js","webpack:///./content/timeline.js","webpack:///./src/pages/cv.jsx","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_object-to-array.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.object.values.js"],"names":["_objectWithoutPropertiesLoose","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","_inheritsLoose","subClass","superClass","create","constructor","__proto__","_assertThisInitialized","self","ReferenceError","createContext","getChildMapping","children","mapFn","result","map","c","forEach","child","mapper","getProp","prop","props","getNextChildMapping","nextProps","prevChildMapping","onExited","nextChildMapping","prev","next","getValueForKey","nextKeysPending","pendingKeys","prevKey","push","childMapping","nextKey","pendingNextKey","mergeChildMappings","hasPrev","hasNext","prevChild","isLeaving","bind","exit","enter","values","obj","k","_React$Component","TransitionGroup","context","_this","handleExited","state","contextValue","isMounting","firstRender","_proto","componentDidMount","mounted","setState","componentWillUnmount","getDerivedStateFromProps","_ref","appear","node","currentChildMapping","render","_this$props","Component","component","childFactory","createElement","TransitionGroupContext","Provider","value","propTypes","defaultProps","replaceClassName","origClass","classToRemove","replace","RegExp","UNMOUNTED","EXITED","ENTERING","ENTERED","Transition","initialStatus","appearStatus","unmountOnExit","mountOnEnter","status","nextCallback","prevState","updateStatus","componentDidUpdate","prevProps","nextStatus","cancelNextCallback","getTimeouts","timeout","undefined","mounting","findDOMNode","performEnter","performExit","_this2","appearing","timeouts","enterTimeout","config","safeSetState","onEntered","onEnter","onEntering","onTransitionEnd","_this3","onExit","onExiting","cancel","nextState","callback","setNextCallback","_this4","active","event","handler","doesNotHaveTimeoutOrListener","addEndListener","setTimeout","childProps","Children","only","cloneElement","noop","contextType","EXITING","classes","split","className","element","classList","remove","setAttribute","baseVal","CSSTransition","_len","args","Array","_key","concat","appliedClasses","removeClasses","addClass","type","getClassNames","classNames","isStringClassNames","baseClassName","activeClassName","doneClassName","phase","scrollTop","add","contains","hasClass","_addClass","_this$appliedClasses$","base","done","ObjectType","JOB","LEARNED","EXPERIENCED","ACHIEVEMENT","EDUCATION","LIFE","TypeLabels","content","title","text","TimeLineItem","styles","timelineItem","titleWithDot","circle","inside","Filter","onChange","onClickAll","filterPanel","filterItem","onClick","e","every","v","checked","CVPage","filterChangeHandler","fiterItem","item","some","t","clickAllHandler","style","paddingTop","marginBottom","timeline","timelineContent","filter","itemEnter","enterActive","itemEnterActive","itemExit","exitActive","itemExitActive","React","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","it","O","$export","$values","S"],"mappings":"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","file":"component---src-pages-cv-jsx-4f150586fbc1ad2376e8.js","sourcesContent":["export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import React from 'react';\nexport default React.createContext(null);","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.object.create\";\nimport { Children, cloneElement, isValidElement } from 'react';\n/**\n * Given `this.props.children`, return an object mapping key to child.\n *\n * @param {*} children `this.props.children`\n * @return {object} Mapping of key to child\n */\n\nexport function getChildMapping(children, mapFn) {\n  var mapper = function mapper(child) {\n    return mapFn && isValidElement(child) ? mapFn(child) : child;\n  };\n\n  var result = Object.create(null);\n  if (children) Children.map(children, function (c) {\n    return c;\n  }).forEach(function (child) {\n    // run the map function here instead so that the key is the computed one\n    result[child.key] = mapper(child);\n  });\n  return result;\n}\n/**\n * When you're adding or removing children some may be added or removed in the\n * same render pass. We want to show *both* since we want to simultaneously\n * animate elements in and out. This function takes a previous set of keys\n * and a new set of keys and merges them with its best guess of the correct\n * ordering. In the future we may expose some of the utilities in\n * ReactMultiChild to make this easy, but for now React itself does not\n * directly have this concept of the union of prevChildren and nextChildren\n * so we implement it here.\n *\n * @param {object} prev prev children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @param {object} next next children as returned from\n * `ReactTransitionChildMapping.getChildMapping()`.\n * @return {object} a key set that contains all keys in `prev` and all keys\n * in `next` in a reasonable order.\n */\n\nexport function mergeChildMappings(prev, next) {\n  prev = prev || {};\n  next = next || {};\n\n  function getValueForKey(key) {\n    return key in next ? next[key] : prev[key];\n  } // For each key of `next`, the list of keys to insert before that key in\n  // the combined list\n\n\n  var nextKeysPending = Object.create(null);\n  var pendingKeys = [];\n\n  for (var prevKey in prev) {\n    if (prevKey in next) {\n      if (pendingKeys.length) {\n        nextKeysPending[prevKey] = pendingKeys;\n        pendingKeys = [];\n      }\n    } else {\n      pendingKeys.push(prevKey);\n    }\n  }\n\n  var i;\n  var childMapping = {};\n\n  for (var nextKey in next) {\n    if (nextKeysPending[nextKey]) {\n      for (i = 0; i < nextKeysPending[nextKey].length; i++) {\n        var pendingNextKey = nextKeysPending[nextKey][i];\n        childMapping[nextKeysPending[nextKey][i]] = getValueForKey(pendingNextKey);\n      }\n    }\n\n    childMapping[nextKey] = getValueForKey(nextKey);\n  } // Finally, add the keys which didn't appear before any key in `next`\n\n\n  for (i = 0; i < pendingKeys.length; i++) {\n    childMapping[pendingKeys[i]] = getValueForKey(pendingKeys[i]);\n  }\n\n  return childMapping;\n}\n\nfunction getProp(child, prop, props) {\n  return props[prop] != null ? props[prop] : child.props[prop];\n}\n\nexport function getInitialChildMapping(props, onExited) {\n  return getChildMapping(props.children, function (child) {\n    return cloneElement(child, {\n      onExited: onExited.bind(null, child),\n      \"in\": true,\n      appear: getProp(child, 'appear', props),\n      enter: getProp(child, 'enter', props),\n      exit: getProp(child, 'exit', props)\n    });\n  });\n}\nexport function getNextChildMapping(nextProps, prevChildMapping, onExited) {\n  var nextChildMapping = getChildMapping(nextProps.children);\n  var children = mergeChildMappings(prevChildMapping, nextChildMapping);\n  Object.keys(children).forEach(function (key) {\n    var child = children[key];\n    if (!isValidElement(child)) return;\n    var hasPrev = key in prevChildMapping;\n    var hasNext = key in nextChildMapping;\n    var prevChild = prevChildMapping[key];\n    var isLeaving = isValidElement(prevChild) && !prevChild.props[\"in\"]; // item is new (entering)\n\n    if (hasNext && (!hasPrev || isLeaving)) {\n      // console.log('entering', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        \"in\": true,\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    } else if (!hasNext && hasPrev && !isLeaving) {\n      // item is old (exiting)\n      // console.log('leaving', key)\n      children[key] = cloneElement(child, {\n        \"in\": false\n      });\n    } else if (hasNext && hasPrev && isValidElement(prevChild)) {\n      // item hasn't changed transition states\n      // copy over the last transition props;\n      // console.log('unchanged', key)\n      children[key] = cloneElement(child, {\n        onExited: onExited.bind(null, child),\n        \"in\": prevChild.props[\"in\"],\n        exit: getProp(child, 'exit', nextProps),\n        enter: getProp(child, 'enter', nextProps)\n      });\n    }\n  });\n  return children;\n}","import \"core-js/modules/es6.function.bind\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es7.object.values\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport TransitionGroupContext from './TransitionGroupContext';\nimport { getChildMapping, getInitialChildMapping, getNextChildMapping } from './utils/ChildMapping';\n\nvar values = Object.values || function (obj) {\n  return Object.keys(obj).map(function (k) {\n    return obj[k];\n  });\n};\n\nvar defaultProps = {\n  component: 'div',\n  childFactory: function childFactory(child) {\n    return child;\n  }\n  /**\n   * The `<TransitionGroup>` component manages a set of transition components\n   * (`<Transition>` and `<CSSTransition>`) in a list. Like with the transition\n   * components, `<TransitionGroup>` is a state machine for managing the mounting\n   * and unmounting of components over time.\n   *\n   * Consider the example below. As items are removed or added to the TodoList the\n   * `in` prop is toggled automatically by the `<TransitionGroup>`.\n   *\n   * Note that `<TransitionGroup>`  does not define any animation behavior!\n   * Exactly _how_ a list item animates is up to the individual transition\n   * component. This means you can mix and match animations across different list\n   * items.\n   */\n\n};\n\nvar TransitionGroup =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(TransitionGroup, _React$Component);\n\n  function TransitionGroup(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n\n    var handleExited = _this.handleExited.bind(_assertThisInitialized(_assertThisInitialized(_this))); // Initial children should all be entering, dependent on appear\n\n\n    _this.state = {\n      contextValue: {\n        isMounting: true\n      },\n      handleExited: handleExited,\n      firstRender: true\n    };\n    return _this;\n  }\n\n  var _proto = TransitionGroup.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.mounted = true;\n    this.setState({\n      contextValue: {\n        isMounting: false\n      }\n    });\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.mounted = false;\n  };\n\n  TransitionGroup.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, _ref) {\n    var prevChildMapping = _ref.children,\n        handleExited = _ref.handleExited,\n        firstRender = _ref.firstRender;\n    return {\n      children: firstRender ? getInitialChildMapping(nextProps, handleExited) : getNextChildMapping(nextProps, prevChildMapping, handleExited),\n      firstRender: false\n    };\n  };\n\n  _proto.handleExited = function handleExited(child, node) {\n    var currentChildMapping = getChildMapping(this.props.children);\n    if (child.key in currentChildMapping) return;\n\n    if (child.props.onExited) {\n      child.props.onExited(node);\n    }\n\n    if (this.mounted) {\n      this.setState(function (state) {\n        var children = _extends({}, state.children);\n\n        delete children[child.key];\n        return {\n          children: children\n        };\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        Component = _this$props.component,\n        childFactory = _this$props.childFactory,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"component\", \"childFactory\"]);\n\n    var contextValue = this.state.contextValue;\n    var children = values(this.state.children).map(childFactory);\n    delete props.appear;\n    delete props.enter;\n    delete props.exit;\n\n    if (Component === null) {\n      return React.createElement(TransitionGroupContext.Provider, {\n        value: contextValue\n      }, children);\n    }\n\n    return React.createElement(TransitionGroupContext.Provider, {\n      value: contextValue\n    }, React.createElement(Component, props, children));\n  };\n\n  return TransitionGroup;\n}(React.Component);\n\nTransitionGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * `<TransitionGroup>` renders a `<div>` by default. You can change this\n   * behavior by providing a `component` prop.\n   * If you use React v16+ and would like to avoid a wrapping `<div>` element\n   * you can pass in `component={null}`. This is useful if the wrapping div\n   * borks your css styles.\n   */\n  component: PropTypes.any,\n\n  /**\n   * A set of `<Transition>` components, that are toggled `in` and out as they\n   * leave. the `<TransitionGroup>` will inject specific transition props, so\n   * remember to spread them through if you are wrapping the `<Transition>` as\n   * with our `<Fade>` example.\n   *\n   * While this component is meant for multiple `Transition` or `CSSTransition`\n   * children, sometimes you may want to have a single transition child with\n   * content that you want to be transitioned out and in when you change it\n   * (e.g. routes, images etc.) In that case you can change the `key` prop of\n   * the transition child as you change its content, this will cause\n   * `TransitionGroup` to transition the child out and back in.\n   */\n  children: PropTypes.node,\n\n  /**\n   * A convenience prop that enables or disables appear animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables enter animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * A convenience prop that enables or disables exit animations\n   * for all children. Note that specifying this will override any defaults set\n   * on individual children Transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * You may need to apply reactive updates to a child as it is exiting.\n   * This is generally done by using `cloneElement` however in the case of an exiting\n   * child the element has already been removed and not accessible to the consumer.\n   *\n   * If you do need to update a child as it leaves you can provide a `childFactory`\n   * to wrap every child, even the ones that are leaving.\n   *\n   * @type Function(child: ReactElement) -> ReactElement\n   */\n  childFactory: PropTypes.func\n} : {};\nTransitionGroup.defaultProps = defaultProps;\nexport default TransitionGroup;","import \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\n\nfunction replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    ;\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","export default {\n  disabled: false\n};","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport config from './config';\nimport { timeoutsShape } from './utils/PropTypes';\nimport TransitionGroupContext from './TransitionGroupContext';\nexport var UNMOUNTED = 'unmounted';\nexport var EXITED = 'exited';\nexport var ENTERING = 'entering';\nexport var ENTERED = 'entered';\nexport var EXITING = 'exiting';\n/**\n * The Transition component lets you describe a transition from one component\n * state to another _over time_ with a simple declarative API. Most commonly\n * it's used to animate the mounting and unmounting of a component, but can also\n * be used to describe in-place transition states as well.\n *\n * ---\n *\n * **Note**: `Transition` is a platform-agnostic base component. If you're using\n * transitions in CSS, you'll probably want to use\n * [`CSSTransition`](https://reactcommunity.org/react-transition-group/css-transition)\n * instead. It inherits all the features of `Transition`, but contains\n * additional features necessary to play nice with CSS transitions (hence the\n * name of the component).\n *\n * ---\n *\n * By default the `Transition` component does not alter the behavior of the\n * component it renders, it only tracks \"enter\" and \"exit\" states for the\n * components. It's up to you to give meaning and effect to those states. For\n * example we can add styles to a component when it enters or exits:\n *\n * ```jsx\n * import { Transition } from 'react-transition-group';\n *\n * const duration = 300;\n *\n * const defaultStyle = {\n *   transition: `opacity ${duration}ms ease-in-out`,\n *   opacity: 0,\n * }\n *\n * const transitionStyles = {\n *   entering: { opacity: 1 },\n *   entered:  { opacity: 1 },\n *   exiting:  { opacity: 0 },\n *   exited:  { opacity: 0 },\n * };\n *\n * const Fade = ({ in: inProp }) => (\n *   <Transition in={inProp} timeout={duration}>\n *     {state => (\n *       <div style={{\n *         ...defaultStyle,\n *         ...transitionStyles[state]\n *       }}>\n *         I'm a fade Transition!\n *       </div>\n *     )}\n *   </Transition>\n * );\n * ```\n *\n * There are 4 main states a Transition can be in:\n *  - `'entering'`\n *  - `'entered'`\n *  - `'exiting'`\n *  - `'exited'`\n *\n * Transition state is toggled via the `in` prop. When `true` the component\n * begins the \"Enter\" stage. During this stage, the component will shift from\n * its current transition state, to `'entering'` for the duration of the\n * transition and then to the `'entered'` stage once it's complete. Let's take\n * the following example (we'll use the\n * [useState](https://reactjs.org/docs/hooks-reference.html#usestate) hook):\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <Transition in={inProp} timeout={500}>\n *         {state => (\n *           // ...\n *         )}\n *       </Transition>\n *       <button onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the button is clicked the component will shift to the `'entering'` state\n * and stay there for 500ms (the value of `timeout`) before it finally switches\n * to `'entered'`.\n *\n * When `in` is `false` the same thing happens except the state moves from\n * `'exiting'` to `'exited'`.\n */\n\nvar Transition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Transition, _React$Component);\n\n  function Transition(props, context) {\n    var _this;\n\n    _this = _React$Component.call(this, props, context) || this;\n    var parentGroup = context; // In the context of a TransitionGroup all enters are really appears\n\n    var appear = parentGroup && !parentGroup.isMounting ? props.enter : props.appear;\n    var initialStatus;\n    _this.appearStatus = null;\n\n    if (props[\"in\"]) {\n      if (appear) {\n        initialStatus = EXITED;\n        _this.appearStatus = ENTERING;\n      } else {\n        initialStatus = ENTERED;\n      }\n    } else {\n      if (props.unmountOnExit || props.mountOnEnter) {\n        initialStatus = UNMOUNTED;\n      } else {\n        initialStatus = EXITED;\n      }\n    }\n\n    _this.state = {\n      status: initialStatus\n    };\n    _this.nextCallback = null;\n    return _this;\n  }\n\n  Transition.getDerivedStateFromProps = function getDerivedStateFromProps(_ref, prevState) {\n    var nextIn = _ref[\"in\"];\n\n    if (nextIn && prevState.status === UNMOUNTED) {\n      return {\n        status: EXITED\n      };\n    }\n\n    return null;\n  }; // getSnapshotBeforeUpdate(prevProps) {\n  //   let nextStatus = null\n  //   if (prevProps !== this.props) {\n  //     const { status } = this.state\n  //     if (this.props.in) {\n  //       if (status !== ENTERING && status !== ENTERED) {\n  //         nextStatus = ENTERING\n  //       }\n  //     } else {\n  //       if (status === ENTERING || status === ENTERED) {\n  //         nextStatus = EXITING\n  //       }\n  //     }\n  //   }\n  //   return { nextStatus }\n  // }\n\n\n  var _proto = Transition.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.updateStatus(true, this.appearStatus);\n  };\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps) {\n    var nextStatus = null;\n\n    if (prevProps !== this.props) {\n      var status = this.state.status;\n\n      if (this.props[\"in\"]) {\n        if (status !== ENTERING && status !== ENTERED) {\n          nextStatus = ENTERING;\n        }\n      } else {\n        if (status === ENTERING || status === ENTERED) {\n          nextStatus = EXITING;\n        }\n      }\n    }\n\n    this.updateStatus(false, nextStatus);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.cancelNextCallback();\n  };\n\n  _proto.getTimeouts = function getTimeouts() {\n    var timeout = this.props.timeout;\n    var exit, enter, appear;\n    exit = enter = appear = timeout;\n\n    if (timeout != null && typeof timeout !== 'number') {\n      exit = timeout.exit;\n      enter = timeout.enter; // TODO: remove fallback for next major\n\n      appear = timeout.appear !== undefined ? timeout.appear : enter;\n    }\n\n    return {\n      exit: exit,\n      enter: enter,\n      appear: appear\n    };\n  };\n\n  _proto.updateStatus = function updateStatus(mounting, nextStatus) {\n    if (mounting === void 0) {\n      mounting = false;\n    }\n\n    if (nextStatus !== null) {\n      // nextStatus will always be ENTERING or EXITING.\n      this.cancelNextCallback();\n      var node = ReactDOM.findDOMNode(this);\n\n      if (nextStatus === ENTERING) {\n        this.performEnter(node, mounting);\n      } else {\n        this.performExit(node);\n      }\n    } else if (this.props.unmountOnExit && this.state.status === EXITED) {\n      this.setState({\n        status: UNMOUNTED\n      });\n    }\n  };\n\n  _proto.performEnter = function performEnter(node, mounting) {\n    var _this2 = this;\n\n    var enter = this.props.enter;\n    var appearing = this.context ? this.context.isMounting : mounting;\n    var timeouts = this.getTimeouts();\n    var enterTimeout = appearing ? timeouts.appear : timeouts.enter; // no enter animation skip right to ENTERED\n    // if we are mounting and running this it means appear _must_ be set\n\n    if (!mounting && !enter || config.disabled) {\n      this.safeSetState({\n        status: ENTERED\n      }, function () {\n        _this2.props.onEntered(node);\n      });\n      return;\n    }\n\n    this.props.onEnter(node, appearing);\n    this.safeSetState({\n      status: ENTERING\n    }, function () {\n      _this2.props.onEntering(node, appearing);\n\n      _this2.onTransitionEnd(node, enterTimeout, function () {\n        _this2.safeSetState({\n          status: ENTERED\n        }, function () {\n          _this2.props.onEntered(node, appearing);\n        });\n      });\n    });\n  };\n\n  _proto.performExit = function performExit(node) {\n    var _this3 = this;\n\n    var exit = this.props.exit;\n    var timeouts = this.getTimeouts(); // no exit animation skip right to EXITED\n\n    if (!exit || config.disabled) {\n      this.safeSetState({\n        status: EXITED\n      }, function () {\n        _this3.props.onExited(node);\n      });\n      return;\n    }\n\n    this.props.onExit(node);\n    this.safeSetState({\n      status: EXITING\n    }, function () {\n      _this3.props.onExiting(node);\n\n      _this3.onTransitionEnd(node, timeouts.exit, function () {\n        _this3.safeSetState({\n          status: EXITED\n        }, function () {\n          _this3.props.onExited(node);\n        });\n      });\n    });\n  };\n\n  _proto.cancelNextCallback = function cancelNextCallback() {\n    if (this.nextCallback !== null) {\n      this.nextCallback.cancel();\n      this.nextCallback = null;\n    }\n  };\n\n  _proto.safeSetState = function safeSetState(nextState, callback) {\n    // This shouldn't be necessary, but there are weird race conditions with\n    // setState callbacks and unmounting in testing, so always make sure that\n    // we can cancel any pending setState callbacks after we unmount.\n    callback = this.setNextCallback(callback);\n    this.setState(nextState, callback);\n  };\n\n  _proto.setNextCallback = function setNextCallback(callback) {\n    var _this4 = this;\n\n    var active = true;\n\n    this.nextCallback = function (event) {\n      if (active) {\n        active = false;\n        _this4.nextCallback = null;\n        callback(event);\n      }\n    };\n\n    this.nextCallback.cancel = function () {\n      active = false;\n    };\n\n    return this.nextCallback;\n  };\n\n  _proto.onTransitionEnd = function onTransitionEnd(node, timeout, handler) {\n    this.setNextCallback(handler);\n    var doesNotHaveTimeoutOrListener = timeout == null && !this.props.addEndListener;\n\n    if (!node || doesNotHaveTimeoutOrListener) {\n      setTimeout(this.nextCallback, 0);\n      return;\n    }\n\n    if (this.props.addEndListener) {\n      this.props.addEndListener(node, this.nextCallback);\n    }\n\n    if (timeout != null) {\n      setTimeout(this.nextCallback, timeout);\n    }\n  };\n\n  _proto.render = function render() {\n    var status = this.state.status;\n\n    if (status === UNMOUNTED) {\n      return null;\n    }\n\n    var _this$props = this.props,\n        children = _this$props.children,\n        childProps = _objectWithoutPropertiesLoose(_this$props, [\"children\"]); // filter props for Transtition\n\n\n    delete childProps[\"in\"];\n    delete childProps.mountOnEnter;\n    delete childProps.unmountOnExit;\n    delete childProps.appear;\n    delete childProps.enter;\n    delete childProps.exit;\n    delete childProps.timeout;\n    delete childProps.addEndListener;\n    delete childProps.onEnter;\n    delete childProps.onEntering;\n    delete childProps.onEntered;\n    delete childProps.onExit;\n    delete childProps.onExiting;\n    delete childProps.onExited;\n\n    if (typeof children === 'function') {\n      // allows for nested Transitions\n      return React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, children(status, childProps));\n    }\n\n    var child = React.Children.only(children);\n    return (// allows for nested Transitions\n      React.createElement(TransitionGroupContext.Provider, {\n        value: null\n      }, React.cloneElement(child, childProps))\n    );\n  };\n\n  return Transition;\n}(React.Component);\n\nTransition.contextType = TransitionGroupContext;\nTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * A `function` child can be used instead of a React element. This function is\n   * called with the current transition status (`'entering'`, `'entered'`,\n   * `'exiting'`, `'exited'`), which can be used to apply context\n   * specific props to a component.\n   *\n   * ```jsx\n   * <Transition in={this.state.in} timeout={150}>\n   *   {state => (\n   *     <MyComponent className={`fade fade-${state}`} />\n   *   )}\n   * </Transition>\n   * ```\n   */\n  children: PropTypes.oneOfType([PropTypes.func.isRequired, PropTypes.element.isRequired]).isRequired,\n\n  /**\n   * Show the component; triggers the enter or exit states\n   */\n  \"in\": PropTypes.bool,\n\n  /**\n   * By default the child component is mounted immediately along with\n   * the parent `Transition` component. If you want to \"lazy mount\" the component on the\n   * first `in={true}` you can set `mountOnEnter`. After the first enter transition the component will stay\n   * mounted, even on \"exited\", unless you also specify `unmountOnExit`.\n   */\n  mountOnEnter: PropTypes.bool,\n\n  /**\n   * By default the child component stays mounted after it reaches the `'exited'` state.\n   * Set `unmountOnExit` if you'd prefer to unmount the component after it finishes exiting.\n   */\n  unmountOnExit: PropTypes.bool,\n\n  /**\n   * Normally a component is not transitioned if it is shown when the\n   * `<Transition>` component mounts. If you want to transition on the first\n   * mount set `appear` to `true`, and the component will transition in as soon\n   * as the `<Transition>` mounts.\n   *\n   * > **Note**: there are no special appear states like `appearing`/`appeared`, this prop\n   * > only adds an additional enter transition. However, in the\n   * > `<CSSTransition>` component that first enter transition does result in\n   * > additional `.appear-*` classes, that way you can choose to style it\n   * > differently.\n   */\n  appear: PropTypes.bool,\n\n  /**\n   * Enable or disable enter transitions.\n   */\n  enter: PropTypes.bool,\n\n  /**\n   * Enable or disable exit transitions.\n   */\n  exit: PropTypes.bool,\n\n  /**\n   * The duration of the transition, in milliseconds.\n   * Required unless `addEndListener` is provided.\n   *\n   * You may specify a single timeout for all transitions:\n   *\n   * ```jsx\n   * timeout={500}\n   * ```\n   *\n   * or individually:\n   *\n   * ```jsx\n   * timeout={{\n   *  appear: 500,\n   *  enter: 300,\n   *  exit: 500,\n   * }}\n   * ```\n   *\n   * - `appear` defaults to the value of `enter`\n   * - `enter` defaults to `0`\n   * - `exit` defaults to `0`\n   *\n   * @type {number | { enter?: number, exit?: number, appear?: number }}\n   */\n  timeout: function timeout(props) {\n    var pt = timeoutsShape;\n    if (!props.addEndListener) pt = pt.isRequired;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    return pt.apply(void 0, [props].concat(args));\n  },\n\n  /**\n   * Add a custom transition end trigger. Called with the transitioning\n   * DOM node and a `done` callback. Allows for more fine grained transition end\n   * logic. **Note:** Timeouts are still used as a fallback if provided.\n   *\n   * ```jsx\n   * addEndListener={(node, done) => {\n   *   // use the css transitionend event to mark the finish of a transition\n   *   node.addEventListener('transitionend', done, false);\n   * }}\n   * ```\n   */\n  addEndListener: PropTypes.func,\n\n  /**\n   * Callback fired before the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entering\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the \"entered\" status is applied. An extra parameter\n   * `isAppearing` is supplied to indicate if the enter stage is occurring on the initial mount\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool) -> void\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired before the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exiting\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the \"exited\" status is applied.\n   *\n   * @type Function(node: HtmlElement) -> void\n   */\n  onExited: PropTypes.func // Name the function so it is clearer in the documentation\n\n} : {};\n\nfunction noop() {}\n\nTransition.defaultProps = {\n  \"in\": false,\n  mountOnEnter: false,\n  unmountOnExit: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  onEnter: noop,\n  onEntering: noop,\n  onEntered: noop,\n  onExit: noop,\n  onExiting: noop,\n  onExited: noop\n};\nTransition.UNMOUNTED = 0;\nTransition.EXITED = 1;\nTransition.ENTERING = 2;\nTransition.ENTERED = 3;\nTransition.EXITING = 4;\nexport default Transition;","import \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport PropTypes from 'prop-types';\nimport addOneClass from 'dom-helpers/addClass';\nimport removeOneClass from 'dom-helpers/removeClass';\nimport React from 'react';\nimport Transition from './Transition';\nimport { classNamesShape } from './utils/PropTypes';\n\nvar _addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return addOneClass(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return removeOneClass(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](http://www.nganimate.org/) library, you should use it if you're\n * using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**.\n *\n * **Note**: If you're using the\n * [`appear`](http://reactcommunity.org/react-transition-group/transition#Transition-prop-appear)\n * prop, make sure to define styles for `.appear-*` classes as well.\n */\n\n\nvar CSSTransition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.appliedClasses = {\n      appear: {},\n      enter: {},\n      exit: {}\n    };\n\n    _this.onEnter = function (node, appearing) {\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, appearing ? 'appear' : 'enter', 'base');\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node, appearing);\n      }\n    };\n\n    _this.onEntering = function (node, appearing) {\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.addClass(node, type, 'active');\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node, appearing);\n      }\n    };\n\n    _this.onEntered = function (node, appearing) {\n      var type = appearing ? 'appear' : 'enter';\n\n      _this.removeClasses(node, type);\n\n      _this.addClass(node, type, 'done');\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node, appearing);\n      }\n    };\n\n    _this.onExit = function (node) {\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      _this.addClass(node, 'exit', 'base');\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    };\n\n    _this.onExiting = function (node) {\n      _this.addClass(node, 'exit', 'active');\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    };\n\n    _this.onExited = function (node) {\n      _this.removeClasses(node, 'exit');\n\n      _this.addClass(node, 'exit', 'done');\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + \"-\" : '';\n      var baseClassName = isStringClassNames ? \"\" + prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? baseClassName + \"-active\" : classNames[type + \"Active\"];\n      var doneClassName = isStringClassNames ? baseClassName + \"-done\" : classNames[type + \"Done\"];\n      return {\n        baseClassName: baseClassName,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.addClass = function addClass(node, type, phase) {\n    var className = this.getClassNames(type)[phase + \"ClassName\"];\n\n    if (type === 'appear' && phase === 'done') {\n      className += \" \" + this.getClassNames('enter').doneClassName;\n    } // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n\n\n    if (phase === 'active') {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n    }\n\n    this.appliedClasses[type][phase] = className;\n\n    _addClass(node, className);\n  };\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$appliedClasses$ = this.appliedClasses[type],\n        baseClassName = _this$appliedClasses$.base,\n        activeClassName = _this$appliedClasses$.active,\n        doneClassName = _this$appliedClasses$.done;\n    this.appliedClasses[type] = {};\n\n    if (baseClassName) {\n      removeClass(node, baseClassName);\n    }\n\n    if (activeClassName) {\n      removeClass(node, activeClassName);\n    }\n\n    if (doneClassName) {\n      removeClass(node, doneClassName);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        _ = _this$props.classNames,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"classNames\"]);\n\n    return React.createElement(Transition, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(React.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, Transition.propTypes, {\n  /**\n   * The animation classNames applied to the component as it appears, enters,\n   * exits or has finished the transition. A single name can be provided and it\n   * will be suffixed for each stage: e.g.\n   *\n   * `classNames=\"fade\"` applies `fade-appear`, `fade-appear-active`,\n   * `fade-appear-done`, `fade-enter`, `fade-enter-active`, `fade-enter-done`,\n   * `fade-exit`, `fade-exit-active`, and `fade-exit-done`.\n   *\n   * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.\n   * This allows you to define different behavior for when appearing is done and\n   * when regular entering is done, using selectors like\n   * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an\n   * epic entrance animation when element first appears in the DOM using\n   * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   * simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nexport default CSSTransition;","import hasClass from './hasClass';\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","import \"core-js/modules/es6.array.index-of\";\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","export const ObjectType = {\n  JOB: 'JOB',\n  LEARNED: 'LEARNED',\n  EXPERIENCED: 'EXPERIENCED',\n  ACHIEVEMENT: 'ACHIEVEMENT',\n  EDUCATION: 'EDUCATION',\n  LIFE: 'LIFE',\n};\n\nexport const TypeLabels = {\n  JOB: 'Job',\n  LEARNED: 'Learned',\n  EXPERIENCED: 'Experienced',\n  ACHIEVEMENT: 'Achievement',\n  EDUCATION: 'Education',\n  LIFE: 'Life',\n};\n\nexport default {\n  content: [\n    {\n      title: 'Sep 2019 - First airplane flight (My first visit of Spain)',\n      text: `3 things I've touched for the first time - flight with airplane, visited Spain and surfed\n      for the first time. This was actually Kickresume teambuilding - had a great time.`,\n      type: ObjectType.EXPERIENCED,\n    },\n    {\n      title: 'Aug 2019 - Started out my personal project named Lucinda',\n      type: ObjectType.LIFE,\n    },\n    {\n      title: 'Jun 2019 - Achieved Master\\'s Degree',\n      text: `I was waiting a lot for this to happen. It was tough path and I'm\n      really happy it is finally over. Now the real life starts`,\n      type: ObjectType.ACHIEVEMENT,\n    },\n    {\n      title: 'Feb 2019 - Started working at Kickresume (Till now)',\n      text: 'I\\'m working here as a React developer.',\n      type: ObjectType.JOB,\n    },\n    {\n      title: 'July 2017 - Started working at MyPio (Ends Feb 2018)',\n      text: `I worked here as a Full-stack (React and Lambda) javascript developer. \n      Here I've learned a lot of things about AWS, mainly about Lambda and S3 service.\n      I've learned how to deploy code with Jenkins. Company crashed down due to insufficient finances - \n      As a telecomunicating app it needed third party help to provide services which costs lot of money. \n      Outcome highly exceed income of the company and \"break even\" wasn't anywhere near.\n      `,\n      type: ObjectType.JOB,\n    },\n    {\n      title: 'Jun 2017 - Achieved Bachelor\\'s Degree',\n      text: `I was researching neural networks which had to recognize parts of speech. \n      I used Tensorflow python library and new custom network which helps model to achieve high precision.`,\n      type: [ObjectType.ACHIEVEMENT, ObjectType.EDUCATION],\n    },\n    {\n      title: 'Jun 2016 - Found my first IT job',\n      text: `\n        I worked for startup ProfitComputing which aim was to implement physical security systems. \n        Camera monitoring, door locking, alarms, permissions for persons etc. I was working on Javascript here.\n      `,\n      type: [ObjectType.JOB, ObjectType.ACHIEVEMENT],\n    },\n    {\n      title: 'Sep 2014 - Moving to Bratislava, begin study at Slovak Technical University',\n      text: 'Faculty of Informatics and Information Technology',\n      type: [ObjectType.ACHIEVEMENT, ObjectType.EDUCATION],\n    },\n    {\n      title: 'Aug 2014 - Acquired driving licence',\n      type: ObjectType.ACHIEVEMENT,\n    },\n    {\n      title: 'July 2014 - Successfuly ends high school',\n      type: [ObjectType.ACHIEVEMENT, ObjectType.EDUCATION],\n    },\n    {\n      title: 'July 2012 - First real alcohol experience',\n      text: `Mixed up whiskey, vodka and wine. \n      Vomitted afterwards. Since this day I haven't drink alcohol for 3 years. (to ~2015)`,\n      type: ObjectType.EXPERIENCED,\n    },\n    {\n      title: 'September 2011 Secondary School Gymnasium Srobarova 1 Kosice',\n      text: `High School. Reading and learning stuff before subject begins was not sufficient anymore. My grades got \n        significantly worse .\n      `,\n      type: ObjectType.ACHIEVEMENT,\n    },\n    {\n      title: 'Sep 2001 - Jun 2010',\n      text: `School. Basically reading and learning stuff before the class start. Sometimes I was learning \n      while teacher was testing another classmate because I knew I am probably next on the shot.`,\n      type: ObjectType.EDUCATION,\n    },\n    {\n      title: '2002 Elementary school began - They say it\\'ll be fun',\n      text: 'It was fun first 5 minutes. Then I started to cry and I know that I don\\'t want to be there.',\n      type: ObjectType.EDUCATION,\n    },\n    {\n      title: '1998-2001 Kindergarten',\n      text: 'Started to learn my first social skills.',\n      type: ObjectType.EDUCATION,\n    },\n    {\n      title: '14.7.1995 - 1998: Don\\'t remember anything',\n      text: 'Mostly crying every night, making my parent\\'s lifes hell. Learn to walk, learn to say \"MAMA\" and so on. You know that kinda stuff',\n      type: ObjectType.LIFE,\n    },\n    {\n      title: '14.7.1995 - I was born.',\n      text: 'Day full of emotions and full of pain of course. I was successfuly born and the next boy saw the light of the world.',\n      type: ObjectType.LIFE,\n    },\n  ],\n};\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport CardBox from '../components/cardbox';\nimport Layout from '../components/layout';\nimport styles from './cv.module.scss';\nimport timelineContent, { ObjectType, TypeLabels } from '../../content/timeline';\n\nconst TimeLineItem = ({ title, text }) => (\n  <div className={styles.timelineItem}>\n    <div className={styles.titleWithDot}>\n      <div className={styles.circle} />\n      {title}\n    </div>\n    <div className={styles.inside}>\n      {text}\n    </div>\n  </div>\n);\n\nconst Filter = ({ values, onChange, onClickAll }) => (\n  <div className={styles.filterPanel}>\n    <div \n      className={styles.filterItem}\n      onClick={e => onClickAll(\n        !Object.values(values).every(v => v)\n      )}\n    >\n      <input checked={Object.values(values).every(v => v)} type=\"checkbox\" />\n      {' '}\n      Show All\n    </div>\n    {\n      Object\n        .keys(ObjectType)\n        .map(type => (\n          <div \n            key={type}\n            className={styles.filterItem}\n            onClick={e => onChange(type, !values[type])}\n          >\n            <input checked={values[type]} type=\"checkbox\" />\n            {' '}\n            {TypeLabels[type]}\n          </div>\n        ))\n    }\n  </div>\n);\n\nclass CVPage extends React.Component {\n  constructor() {\n    super();\n    const keys = Object.keys(ObjectType);\n    const obj = {};\n    keys.forEach((key) => {\n      obj[key] = true;\n    });\n    this.state = {\n      active: obj,\n    };\n  }\n\n  filterChangeHandler = (key, value) => {\n    this.setState(state => ({\n      active: {\n        ...state.active,\n        [key]: value,\n      },\n    }));\n  }\n\n  fiterItem = (item) => {\n    const { active } = this.state;\n    if (item.type === undefined) {\n      return true;\n    }\n    if (item.type instanceof Array) { // it is array\n      // if some of this presented types is active then show it\n      return item.type.some(t => active[t]);\n    }\n    return active[item.type];\n  }\n\n  clickAllHandler = (value) => {\n    this.setState((state) => {\n      const obj = { ...state.active };\n\n      Object.keys(state.active).forEach((key) => {\n        obj[key] = value;\n      });\n\n      return {\n        active: obj,\n      };\n    });\n  }\n\n  render() {\n    return (\n      <Layout>\n        <CardBox>\n          <div style={{ paddingTop: 20 }}>\n            <Filter\n              values={this.state.active}\n              onChange={this.filterChangeHandler}\n              onClickAll={this.clickAllHandler}\n            />\n            <div className={styles.marginBottom}>\n              <div className=\"text-center\"><h3>Martin Schnürer</h3></div>\n            </div>\n            <div className={styles.timeline}>\n              <TransitionGroup>\n                {\n                  timelineContent.content\n                    .filter(this.fiterItem)\n                    .map(item => (\n                      <CSSTransition\n                        timeout={500}\n                        key={item.title}\n                        classNames={{\n                          enter: styles.itemEnter,\n                          enterActive: styles.itemEnterActive,\n                          exit: styles.itemExit,\n                          exitActive: styles.itemExitActive,\n                        }}\n                      >\n                        <TimeLineItem text={item.text} title={item.title} />\n                      </CSSTransition>\n                    ))\n                  }\n              </TransitionGroup>\n            </div>\n          </div>\n        </CardBox>\n      </Layout>\n    );\n  }\n}\n\nexport default CVPage;\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $values = require('./_object-to-array')(false);\n\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n"],"sourceRoot":""}