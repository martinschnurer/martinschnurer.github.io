{"data":{"site":{"siteMetadata":{"title":"Martin Schnürer","author":"Martin Schnürer"}},"markdownRemark":{"id":"fd95d7cd-36e2-57a7-8df2-c6b9f4927c0a","excerpt":"Lucinda is a lazy black fluffy girl. Her name was generated by random name generator and I’m not joking now. Lucinda looks somewhat like this: Yes - she is a…","html":"<p>Lucinda is a lazy black fluffy girl. Her name was generated by random name generator and I’m not joking now.</p>\n<p>Lucinda looks somewhat like this:</p>\n<div class=\"text-center\">\n<p><img src=\"/catt-465668594d908ae48ad1d27b5190e543.svg\" alt=\"cat\"></p>\n</div>\n<p>Yes - she is a cat. Okay, let’s be a little more serious now. Lucinda is a name of my new personal project. Its name was really generated by random name generator and the project mascot is a cat because I just love cats - I think they are cute, fluffy and lazy - also bitches. When they are not in their mood you can’t do much with them. They come to you only when their stomach is empty.</p>\n<h2>Why I started and why am I writing about it</h2>\n<p>I’ve got a ton of personal projects. They are abandoned, buggy, sleeping somewhere in a remote git repository. They didn’t get my full attention and as the time flew my attention converged to zero. All the abandoned projects were at least good for one thing - I learned new things with them, I tried new technologies, libraries, new architectural approaches, new languages. </p>\n<p>I have realized that I have a lot of technical skills but I have no real examples for eventual employer to prove that I really know what I say I know. One thing I really don’t want - or better say - what I really want to learn, is to NOT abandon a project. I want to learn at least have things done as being planned. When I write about it, I think it could give me some additional motivation for doing it - that some person reading it still expect some progress in the future. Even better motivation than someone seeing a progress is when someone has real experience with thing I’ve made - and if it’s positive experience, the motivation then is even bigger.</p>\n<p><strong>So what I’m gonna do</strong></p>\n<p>So I picked a project management software. I’ve seen some of them and I think I could do better. Why not. Worst case scenario is that I lose time and don’t learn anything - which is not common when doing software (Making software is about solving problems. It is expected that I learn something). I expect to learn at least something.</p>\n<h2>Stack, or what I’m gonna use</h2>\n<ul>\n<li>\n<p><strong>Frontend</strong></p>\n<ul>\n<li>React</li>\n<li>CSS/Sass</li>\n<li>Redux</li>\n</ul>\n</li>\n<li>\n<p><strong>Backend</strong></p>\n<ul>\n<li>Typescript / Node.js</li>\n<li>Dynamo-DB</li>\n<li>AWS Lambda</li>\n<li>OAuth</li>\n<li>GraphQL</li>\n</ul>\n</li>\n<li>\n<p><strong>Modeling</strong></p>\n<ul>\n<li>Use case diagrams</li>\n<li>Sequential diagrams</li>\n</ul>\n</li>\n</ul>\n<h2>Use Case Diagram</h2>\n<p>Use case diagram is a diagram showing what users can possible do in your app. You can map different users and map all things (Use cases) they can possibly do. Use Case diagram should also contain include and exclude connections between UCs but for sake of simplicity I decided to not include these types of things and keep everything as simple as it possibly could be.</p>\n<p><img src=\"/uc_v3-6401763a0b13a5feebfe90e967ae71af.svg\" alt=\"use case diagram\"></p>\n<p>It’s a good practice to name your use cases like UC0001: {Short name}, UC0002: {Short name}. Number at the beginning is then used as fast identificator for other related diagrams and so on. </p>\n<p>I named CRUD for Create Read Update Delete - It keeps diagram smaller and in the future I can make UC like UC0012.1, UC0012.2 or finally use another include and exclude use case and connect it with parent CRUD use case. For now, I don’t want to be UC too packed. </p>\n<p><strong>When I can see next progress ?</strong></p>\n<p>For now, I have everything configured. AWS lambda, dynamodb, backend with a few endpoints implemented and frontend has a few pages implemented. I designed landing pages and main app workspace in Figma. </p>\n<p>Currently I’m solving interface typing between graphql server-side controller and aws DynamoDB. I want type safety between database and server (serverless lambda).</p>\n<p><strong>I see problems at</strong>:</p>\n<ul>\n<li>Drag and drop tasks from panel, I’ve never worked with that. I’m going to probably use react-dnd.</li>\n<li>Still have thought about optimizing db lookup with with saving some information to JWT token (information about permissions to projects - where user have permission. If this information is presented, I could possibly omit db checking if user is really in that project and so on. Then there is that problem with removing user from the project. What then? DB lookup for project permissions is going to happen when refresh endpoint is called - for issuing new access token. But when an user is removed from an project, I need wait ~60 mins when user really lost his permission to work with the project (by issuing new access token)) - But I’ll figure it out later</li>\n</ul>","frontmatter":{"title":"Who the hell is Lucinda?","date":"August 29, 2019","categories":["personal"]}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/who-the-hell-is-lucinda/","previous":{"excerpt":"I see people always struggling with include/exclude notation inside use case diagrams. I think these diagrams could explain it better. Now…","fields":{"slug":"/the-difference-between-includes-and-extends-in-use-case-diagram/"},"frontmatter":{"date":"August 28, 2019","title":"What is the difference between includes and extends notation in use case diagram?","publish":null,"categories":["programming","modelling"],"tags":["react","usecase","diagrams","programming"]}},"next":{"excerpt":"It was 5AM. Alarm on my phone woke me up from already shallow sleep. You can’t really sleep when you know something big has to come. And so…","fields":{"slug":"/what-was-the-first-road-trip-like-and-what-would-i-change-next-time/"},"frontmatter":{"date":"September 30, 2019","title":"What was the first road-trip like and what would I change the next time","publish":null,"categories":["personal"],"tags":null}}}}