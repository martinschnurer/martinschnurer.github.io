{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.jsx","webpack:///./src/components/seo.js","webpack:///./src/components/cardbox.jsx","webpack:///./src/utils/typography.js","webpack:///./src/components/bio.jsx"],"names":["BlogIndex","render","_this$props","this","props","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","withVerticalPadding","withFooter","_components_seo__WEBPACK_IMPORTED_MODULE_6__","description","keywords","_components_cardbox__WEBPACK_IMPORTED_MODULE_8__","_components_bio__WEBPACK_IMPORTED_MODULE_4__","showWrittenBy","map","_ref","node","undefined","frontmatter","publish","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_3__","boxShadow","to","date","dangerouslySetInnerHTML","__html","excerpt","React","PureComponent","propTypes","PT","objectOf","any","isRequired","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","PropTypes","object","string","func","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","className","htmlStyles","styles","classnames","root_panel","grid_menu","menu","left_menu","menu_item","gatsby__WEBPACK_IMPORTED_MODULE_4__","activeClassName","active","right_menu","oneOfType","number","defaultProps","SEO","lang","meta","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf","CardBox","_this$props$style","react__WEBPACK_IMPORTED_MODULE_2___default","body_content","inside_content","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","html","width","h1,h2,h3,h4,h5","fontFamily","fontWeight","marginTop","typography","breakWords","a.gatsby-resp-image-link","li","marginLeft",".text-center","textAlign","googleFonts","Typography","bioQuery","Bio","_ref$showWrittenBy","react__WEBPACK_IMPORTED_MODULE_3___default","bio_container","horizontal_center","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","fixed","avatar","childImageSharp","alt","bio_image_style","imgStyle","borderRadius","bio_description","_public_static_d_2019888283_json__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"component---src-pages-index-jsx-d6294ac655e1a31bf24e.js","sourcesContent":["// eslint-disable\n\nimport React from 'react';\nimport PT from 'prop-types';\nimport { Link, graphql } from 'gatsby';\n\nimport Bio from '../components/bio';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { rhythm } from '../utils/typography';\nimport { CardBox } from '../components/cardbox';\n\nconst description = `\nThis is how it looks when a programmer starts to write something else than code. The\npersonal blog of one programmer.\n`;\n\nclass BlogIndex extends React.PureComponent {\n  render() {\n    const { data, location } = this.props;\n    const siteTitle = data.site.siteMetadata.title;\n    const posts = data.allMarkdownRemark.edges;\n\n    return (\n      <Layout location={location} title={siteTitle} withVerticalPadding={false} withFooter>\n        <SEO\n          title=\"Main Page\"\n          description={description}\n          keywords={['blog', 'javascript', 'react', 'personal', 'calculators']}\n        />\n        <CardBox>\n          <Bio showWrittenBy={false} />\n          {posts.map(({ node }) => {\n            if (node.frontmatter.publish !== undefined && node.frontmatter.publish === false) {\n              return null;\n            }\n            const title = node.frontmatter.title || node.fields.slug;\n            return (\n              <div key={node.fields.slug}>\n                <h3 style={{ marginBottom: rhythm(1 / 4) }}>\n                  <Link style={{ boxShadow: 'none' }} to={node.fields.slug}>\n                    {title}\n                  </Link>\n                </h3>\n                <small>{node.frontmatter.date}</small>\n                <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n              </div>\n            );\n          })}\n        </CardBox>\n      </Layout>\n    );\n  }\n}\n\nBlogIndex.propTypes = {\n  data: PT.objectOf(PT.any).isRequired,\n  location: PT.objectOf(PT.any).isRequired,\n};\n\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          timeToRead\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            publish\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react';\nimport classnames from 'classnames';\nimport PT from 'prop-types';\nimport { Link } from 'gatsby';\nimport styles from './layout.module.scss';\n\n\nclass Layout extends React.PureComponent {\n  render() {\n    const {\n      children,\n      className,\n      styles: htmlStyles,\n    } = this.props;\n\n    return (\n      <div className={classnames(styles.root_panel, className)} styles={htmlStyles}>\n        <div className={styles.grid_menu}>\n          <div className={classnames(styles.menu, styles.left_menu)}>\n            <div className={styles.menu_item}>\n              <Link to=\"/\" activeClassName={styles.active}>\n                Home\n              </Link>\n            </div>\n            <div className={styles.menu_item}>\n              <Link to=\"/calculators\" activeClassName={styles.active}>\n                Tools\n              </Link>\n            </div>\n          </div>\n          <div className={classnames(styles.menu, styles.right_menu)}>\n            <div className={styles.menu_item} />\n          </div>\n        </div>\n        {children}\n      </div>\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PT.node.isRequired,\n  className: PT.string,\n  styles: PT.objectOf(PT.oneOfType([PT.number, PT.string])),\n};\n\nLayout.defaultProps = {\n  className: '',\n  styles: {},\n};\n\nexport default Layout;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | Blog`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react';\nimport PT from 'prop-types';\nimport classnames from 'classnames';\nimport styles from './cardbox.module.scss';\n\nclass CardBox extends React.PureComponent {\n  render() {\n    const { children, className, style = {} } = this.props;\n\n    return (\n      <div\n        className={classnames(styles.body_content, className)}\n        style={{ ...style }}\n      >\n        <div className={styles.inside_content}>\n          {children}\n        </div>\n      </div>\n    );\n  }\n}\n\nCardBox.propTypes = {\n  children: PT.node.isRequired,\n  className: PT.string,\n  style: PT.objectOf(PT.oneOfType([PT.string, PT.number])),\n};\n\nCardBox.defaultProps = {\n  style: {},\n  className: '',\n};\n\nexport default CardBox;\nexport { CardBox };\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"html\": {\n      width: \"100%\",\n    },\n    \"h1,h2,h3,h4,h5\": {\n      fontFamily: ['Roboto', 'sans-serif'].join(','),\n      fontWeight: 100,\n      marginTop: typography.rhythm(1),\n      breakWords: 'break-all',\n    },\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n    \"li\": {\n      marginBottom: '5px',\n      marginLeft: '15px',\n    },\n    \".text-center\": {\n      textAlign: \"center\",\n    }\n  }\n};\n\ndelete Wordpress2016.googleFonts;\n\nconst typography = new Typography(Wordpress2016);\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm;\nexport const scale = typography.scale;\n","// eslint-disable-file\n\nimport React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport { rhythm } from \"../utils/typography\"\nimport styles from './bio.module.scss'\n\nconst Bio = ({showWrittenBy = true}) => {\n  return (\n    <StaticQuery\n      query={bioQuery}\n      render={data => {\n        const { author } = data.site.siteMetadata\n        return (\n          <div \n            className={styles.bio_container} \n            style={{marginBottom: rhythm(1.5)}}\n          >\n            <div className={styles.horizontal_center}>\n              <Image\n                fixed={data.avatar.childImageSharp.fixed}\n                alt={author}\n                className={styles.bio_image_style}\n                imgStyle={{ borderRadius: `50%` }}\n              />\n            </div>\n            <div className={styles.name}>\n              {showWrittenBy ? 'Written by' : null} {author}\n            </div>\n            <div className={styles.bio_description}>\n              Programmer, writer, cat-lover and other bullshits someone has in bio.\n            </div>\n          </div>\n        )\n      }}\n    />\n  )\n};\n\nconst bioQuery = graphql`\n  query BioQuery {\n    avatar: file(absolutePath: { regex: \"/profile-pic.jpg/\" }) {\n      childImageSharp {\n        fixed(width: 75, height: 75) {\n          ...GatsbyImageSharpFixed\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}