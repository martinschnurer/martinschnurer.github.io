{"version":3,"sources":["webpack:///./src/pages/calculators/count_words/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./static/crab-cancer-symbol.png","webpack:///./src/components/seo.js","webpack:///./node_modules/core-js/modules/_object-to-array.js","webpack:///./node_modules/core-js/modules/es6.array.sort.js","webpack:///./node_modules/core-js/modules/_strict-method.js","webpack:///./node_modules/core-js/modules/es7.object.entries.js"],"names":["splitRegex","CharsHistogram","getHistogram","_this$props","_this","props","text","countWhitespaces","histogram","split","reduce","acc","char","Object","entries","sort","a","b","render","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","className","styles","charsHistogram","this","map","entry","key","React","PureComponent","propTypes","PT","string","isRequired","bool","defaultProps","WordsStats","_ref","_ref$words","words","_ref$charCount","charCount","_ref$charsWithoutSpac","charsWithoutSpaces","_ref$spaces","spaces","fullWidth","WordRow","_ref2","word","count","WordsHistogram","_this2","_React$PureComponent2","call","hideAll","setState","showAll","toggleShowAll","state","howMuchChange","e","target","value","tryParse","parseInt","isNaN","error","howMuchToShow","wordHistogram","type","checked","onChange","slice","_ref3","CountWordsPage","_this3","_React$PureComponent3","computeWords","filter","length","computeWordsHistogram","wordsCounter","w","toLowerCase","entryA","entryB","timeoutFn","textAreaChangeHandler","clearTimeout","delayedProcessor","setTimeout","replace","_components_layout__WEBPACK_IMPORTED_MODULE_10__","withFooter","classnames","container","childrenWithShadow","_components_seo__WEBPACK_IMPORTED_MODULE_11__","title","description","keywords","textarea","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","data","query","children","PropTypes","object","func","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","assign","json","shape","Layout","_this$props$withFoote","react__WEBPACK_IMPORTED_MODULE_1___default","root_panel","grid_menu","menu","menu_item","src","img","alt","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","body_content","inside_content","Date","getFullYear","Component","p","SEO","lang","meta","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf","getKeys","toIObject","isEnum","f","isEntries","it","O","keys","i","result","push","$export","aFunction","toObject","fails","$sort","test","P","F","undefined","comparefn","method","arg","$entries","S"],"mappings":"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","file":"component---src-pages-calculators-count-words-index-js-89da1bbbb68ba4597d9c.js","sourcesContent":["import React from \"react\";\nimport PT from \"prop-types\";\nimport Layout from '../../../components/layout'\nimport SEO from \"../../../components/seo\"\nimport classnames from \"classnames\";\nimport styles from \"./styles.module.scss\"\n\nconst splitRegex = /[\\s.?]+/;\n\nclass CharsHistogram extends React.PureComponent {\n  \n  static propTypes = {\n    text: PT.string.isRequired,\n    countWhitespaces: PT.bool,\n  }\n\n  static defaultProps = {\n    countWhitespaces: false,\n  }\n\n  getHistogram = () => {\n    const { text, countWhitespaces } = this.props;\n    let histogram = text\n      .split('')\n      .reduce((acc, char) => {\n          if (!countWhitespaces && char === \" \") {\n            return acc;\n          }\n          acc[char] = char in acc ? acc[char] + 1 : 1;\n          return acc;\n      }, {});\n  \n    return Object\n      .entries(histogram)\n      .sort((a, b) => a[1] < b[1] ? 1 : -1)\n  }\n\n  render() {\n    \n    return (\n      <div className={styles.charsHistogram}>\n        <h2>Characters histogram</h2>\n        <table>\n          <tbody>\n          {\n            this.getHistogram().map(entry => (\n              <tr key={entry[0]}>\n                <td>{entry[0]}</td>\n                <td>{entry[1]}</td>\n              </tr>\n            ))\n          }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nconst WordsStats = ({\n  words = 0,\n  charCount = 0, \n  charsWithoutSpaces = 0,\n  spaces = 0\n}) => {\n  return (\n    <div className={styles.fullWidth}>\n      <h2>Stats</h2>\n      <table>\n        <tbody>\n          <tr><td>Words</td><td>{words}</td></tr>\n          <tr><td>Characters (With Spaces)</td><td>{charCount}</td></tr>\n          <tr><td>Characters (Without Spaces)</td><td>{charsWithoutSpaces}</td></tr>\n          <tr><td>Spaces</td><td>{spaces}</td></tr>\n        </tbody>\n      </table>\n    </div>\n  )\n}\n\nconst WordRow = ({word, count}) => (\n  <tr>\n    <td>{word}</td>\n    <td>{count}</td>\n  </tr>\n);\n\nclass WordsHistogram extends React.PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      howMuchToShow: 50,\n      showAll: false,\n      error: null,\n    };\n  }\n\n  hideAll = () => this.setState({ showAll: false });\n  showAll = () => this.setState({ showAll: true });\n  toggleShowAll = () => this.setState({ showAll: !this.state.showAll });\n  howMuchChange = (e) => {\n    if (e.target.value === \"\") {\n      e.target.value = 0;\n    }\n    const tryParse = parseInt(e.target.value)\n    if (isNaN(tryParse)) {\n      this.setState({ error: 'Set positive natural number (for example 50)'})\n    } else {\n      this.setState({\n        error: null,\n        howMuchToShow: tryParse,\n      })\n    }\n  };\n\n  render() {\n    const { entries } = this.props;\n    return (\n      <div className={styles.wordHistogram}>\n        <h2>Words Histogram</h2>\n        <div>ShowAll \n          <input \n            type=\"checkbox\" \n            className=\"margin-left\"\n            checked={this.state.showAll}\n            onChange={this.toggleShowAll}\n          />\n        </div>\n        {!this.state.showAll && (\n          <div>How much words to show? \n           <input\n              className=\"margin-left\"\n              type=\"number\" \n              onChange={this.howMuchChange}\n              value={this.state.howMuchToShow === 0 ? \"\" : this.state.howMuchToShow}\n           />\n          </div>\n        )}\n        <table>\n          <thead>\n            <tr>\n              <th><b>Word</b></th><th><b>Count</b></th>\n            </tr>\n          </thead>\n          <tbody>\n          {\n              entries\n              .slice(0, this.state.howMuchToShow)\n              .map(([word, count]) => <WordRow word={word} count={count} key={word} />)\n          }\n          </tbody>\n        </table>\n      </div>\n      )\n    };\n} \n\nclass CountWordsPage extends React.PureComponent {\n  constructor() {\n    super();\n    this.state = {\n      text: \"\",\n      words: 0,\n    }\n  }\n\n  computeWords = text => \n    text.split(splitRegex).filter(word => word !== \"\" || word !== \" \").length;\n\n  computeWordsHistogram = text => {\n    const words = text.split(splitRegex);\n    const lowercasedWords = words.map(w => w.toLowerCase())\n    const wordsCounter = lowercasedWords.reduce((acc, word) => {\n      acc[word] = (word in acc) ? acc[word] + 1 : 1;\n      return acc;\n    }, {});\n    \n    const sortedWordsHistogram = \n      Object.entries(wordsCounter)\n      .sort((entryA, entryB) => entryA[1] < entryB[1] ? 1 : -1)\n\n    return sortedWordsHistogram;\n  }\n\n  timeoutFn = (text) => {\n    this.setState({\n        words: this.computeWords(text),\n    });\n  };\n\n  textAreaChangeHandler = (e) => {\n    const { value } = e.target;\n\n    // delete previous processor\n    clearTimeout(this.delayedProcessor);\n\n    // create new\n    this.delayedProcessor = setTimeout(() => this.timeoutFn(value), 2);\n\n    this.setState({\n      text: value,\n    })\n  };\n\n  charsWithoutSpaces = (text) => {\n    const newText = text.replace(/\\s/g, '')\n    return newText.length\n  }\n\n  render() {\n    const charsWithoutSpaces = this.charsWithoutSpaces(this.state.text)\n    return (\n      <Layout withFooter={false}>\n        <div className={classnames(styles.container, styles.childrenWithShadow)}>\n          <SEO\n            title={\"Words Counter\"}\n            description={\"Words counter and characters counter\"}\n            keywords={[\"words\", \"counter\", \"histogram\"]}\n          />\n          <div className={styles.fullWidth}>\n            <div>Paste your text to the input below. </div>\n            <textarea className={styles.textarea} onChange={this.textAreaChangeHandler} />\n          </div>\n          <div className={styles.fullWidth}><b>Words:</b> {this.state.words}</div>\n          <WordsStats\n            words={this.state.words}\n            charCount={this.state.text.length}\n            charsWithoutSpaces={charsWithoutSpaces}\n            spaces={this.state.text.length - charsWithoutSpaces}\n          />\n          \n          <WordsHistogram entries={this.computeWordsHistogram(this.state.text)} />\n          <CharsHistogram text={this.state.text} />\n        \n        </div>\n      </Layout>\n    );\n  }\n }\n\nexport default CountWordsPage;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport classnames from 'classnames'\n\nimport styles from './layout.module.css'\nimport img from \"../../static/crab-cancer-symbol.png\"\n\nclass Layout extends React.Component {\n\n  render() {\n    const { children, withFooter = true } = this.props;\n\n    return (\n      <div className={classnames(styles.root_panel)}>\n        <div className={styles.grid_menu}>\n          <div className={styles.menu}>\n            <img className={styles.menu_item} src={img} alt={\"menu logo\"} />\n            <div className={styles.menu_item}><Link to={\"/\"}>Home</Link></div>\n            <div className={styles.menu_item}><Link to={\"/calculators\"}>Calculators</Link></div>\n          </div>\n        </div>\n        <div className={styles.body_content}>\n          <div className={styles.inside_content}>\n            <div>\n              {children}\n            </div>\n            {withFooter && (\n              <footer>\n                © {new Date().getFullYear()}, Martin Schnurer\n              </footer>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","module.exports = __webpack_public_path__ + \"static/crab-cancer-symbol-df2517047b31779b6dc2798a803afcd4.png\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","var getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) if (isEnum.call(O, key = keys[i++])) {\n      result.push(isEntries ? [key, O[key]] : O[key]);\n    } return result;\n  };\n};\n","'use strict';\nvar $export = require('./_export');\nvar aFunction = require('./_a-function');\nvar toObject = require('./_to-object');\nvar fails = require('./_fails');\nvar $sort = [].sort;\nvar test = [1, 2, 3];\n\n$export($export.P + $export.F * (fails(function () {\n  // IE8-\n  test.sort(undefined);\n}) || !fails(function () {\n  // V8 bug\n  test.sort(null);\n  // Old WebKit\n}) || !require('./_strict-method')($sort)), 'Array', {\n  // 22.1.3.25 Array.prototype.sort(comparefn)\n  sort: function sort(comparefn) {\n    return comparefn === undefined\n      ? $sort.call(toObject(this))\n      : $sort.call(toObject(this), aFunction(comparefn));\n  }\n});\n","'use strict';\nvar fails = require('./_fails');\n\nmodule.exports = function (method, arg) {\n  return !!method && fails(function () {\n    // eslint-disable-next-line no-useless-call\n    arg ? method.call(null, function () { /* empty */ }, 1) : method.call(null);\n  });\n};\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n"],"sourceRoot":""}