{"version":3,"sources":["webpack:///./src/pages/categories.jsx","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_object-to-array.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.object.entries.js"],"names":["Categories","render","this","props","data","location","histogram","posts","reduce","hist","post","node","frontmatter","categories","category","createHistogram","allMarkdownRemark","edges","title","withVerticalPadding","withFooter","Object","entries","sort","a","b","map","key","value","React","PureComponent","pageQuery","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","it","O","keys","length","i","result","call","push","$export","$entries","S"],"mappings":"8OAUA,IAcMA,E,gLACJC,OAAA,WAAU,IAAD,EACoBC,KAAKC,MAAxBC,EADD,EACCA,KAAMC,EADP,EACOA,SAERC,EAlBc,SAACC,GACvB,OAAOA,EAAMC,QAAO,SAACC,EAAMC,GACzB,IACA,EADuBA,EAAKC,KAAKC,YAAYC,WAC7C,wDAAuC,CAAC,IAAD,oFAA5BC,EAA4B,EAInCL,EAAKK,GAHDA,KAAYL,EAGCA,EAAKK,GAAY,EAFjB,EAKrB,OAAOL,IACN,IAOiBM,CADJX,EAAKY,kBAAkBC,OAIrC,OACE,kBAAC,IAAD,CAAQZ,SAAUA,EAAUa,MAAM,aAAaC,qBAAqB,EAAOC,YAAU,GACnF,kBAAC,IAAD,KACGC,OAAOC,QAAQhB,GACfiB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE,GAAKC,EAAE,IAAM,EAAI,KAClCC,KAAI,YAAmB,IAAjBC,EAAgB,KAAXC,EAAW,KACrB,OACE,yBAAKD,IAAKA,GACR,6BAAMA,EAAN,MAAcC,U,GAfLC,IAAMC,eA+BhB9B,YAER,IAAM+B,EAAS,c,oBCzDtB,IAAIC,EAAc,EAAQ,IACtBC,EAAU,EAAQ,IAClBC,EAAY,EAAQ,IACpBC,EAAS,EAAQ,IAAiBC,EACtCC,EAAOC,QAAU,SAAUC,GACzB,OAAO,SAAUC,GAOf,IANA,IAKIb,EALAc,EAAIP,EAAUM,GACdE,EAAOT,EAAQQ,GACfE,EAASD,EAAKC,OACdC,EAAI,EACJC,EAAS,GAENF,EAASC,GACdjB,EAAMe,EAAKE,KACNZ,IAAeG,EAAOW,KAAKL,EAAGd,IACjCkB,EAAOE,KAAKR,EAAY,CAACZ,EAAKc,EAAEd,IAAQc,EAAEd,IAG9C,OAAOkB,K,oBCjBX,IAAIG,EAAU,EAAQ,GAClBC,EAAW,EAAQ,IAAR,EAA8B,GAE7CD,EAAQA,EAAQE,EAAG,SAAU,CAC3B5B,QAAS,SAAiBkB,GACxB,OAAOS,EAAST","file":"component---src-pages-categories-jsx-bf8d66094796a5635649.js","sourcesContent":["// eslint-disable\n\nimport React from 'react';\nimport PT from 'prop-types';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { CardBox } from '../components/cardbox';\n\nconst createHistogram = (posts) => {\n  return posts.reduce((hist, post) => {\n    const postCategories = post.node.frontmatter.categories;\n    for (const category of postCategories) {\n      if (!(category in hist)) {\n        hist[category] = 1;\n      } else {\n        hist[category] = hist[category] + 1;\n      }\n    }\n    return hist;\n  }, {});\n}\n\nclass Categories extends React.PureComponent {\n  render() {\n    const { data, location } = this.props;\n    const posts = data.allMarkdownRemark.edges;\n    const histogram = createHistogram(posts);\n    \n\n    return (\n      <Layout location={location} title=\"Categories\" withVerticalPadding={false} withFooter>\n        <CardBox>\n          {Object.entries(histogram)\n          .sort((a, b) => a[1] > b[1] ? -1 : 1)\n          .map(([key, value]) => {\n            return (\n              <div key={key}>\n                <div>{key} = {value}</div>\n              </div>\n            )\n          })}\n        </CardBox>\n      </Layout>\n    );\n  }\n}\n\nCategories.propTypes = {\n  data: PT.objectOf(PT.any).isRequired,\n  location: PT.objectOf(PT.any).isRequired,\n};\n\n\nexport default Categories;\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark {\n      edges {\n        node {\n          frontmatter {\n            categories\n          }\n        }\n      }\n    }\n  }\n`;\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n"],"sourceRoot":""}